import{_ as r,a as l,o as h,c as _,f as p,b as e,g as s,w as b,n as j,t as u,d as q,r as m,h as $,i as S,j as i}from"./index-6c3c2d70.js";const w={},H=s("p",null,'也可以是虚线 borderStyle="dashed"',-1),C=s("p",null,'这是文本内容 borderStyle="dotted"',-1),A=s("p",null,"这是文本内容",-1);function I(a,t){const n=l("ak-divider");return h(),_("div",null,[p(" 这是文本内容 "),e(n),H,e(n,{borderStyle:"dashed",padding:"10px"}),C,e(n,{borderStyle:"dotted"}),A,e(n,{borderStyle:"double"})])}const R=r(w,[["render",I]]),D={},x=s("p",null,"这是文本内容",-1);function N(a,t){const n=l("ak-divider");return h(),_("div",null,[p(" 这是文本内容 "),e(n,{contentPosition:"left"},{default:b(()=>[p("标题")]),_:1}),x])}const P=r(D,[["render",N]]),V={},B=s("span",null,"编辑",-1),E=s("span",null,"查看",-1),z=s("span",null,"删除",-1);function M(a,t){const n=l("ak-divider");return h(),_("div",null,[B,e(n,{direction:"vertical",borderStyle:"dashed"}),E,e(n,{direction:"vertical"}),z])}const T=r(V,[["render",M]]),y=q({components:{vdpv_0:R,vdpv_1:P,vdpv_2:T},setup(a){const t=m(),n=m(),v=m(),g=[t,n,v],d=$({vdpv_0Height:0,vdpv_1Height:0,vdpv_2Height:0});return{toggleCode:o=>{const c="vdpv_"+o;d[c+"Height"]===0?d[c+"Height"]=(g[o].value?g[o].value.offsetHeight:0)||0:d[c+"Height"]=0},...S(d),vdpv_0Ref:t,vdpv_1Ref:n,vdpv_2Ref:v}}});y.$vd={matter:{},toc:[{content:"Divider 分割线",anchor:"divider-分割线",level:1},{content:"基础用法",anchor:"基础用法",level:3},{content:"设置文案提示",anchor:"设置文案提示",level:3},{content:"垂直分隔线",anchor:"垂直分隔线",level:3},{content:"API",anchor:"api",level:2},{content:"Divider",anchor:"divider",level:3}]};const F=y,G={class:"vuedoc"},J=i('<h1 id="divider-分割线" data-source-line="1"><a class="markdownIt-Anchor" href="#divider-分割线">#</a> Divider 分割线</h1><h3 id="基础用法" data-source-line="3"><a class="markdownIt-Anchor" href="#基础用法">#</a> 基础用法</h3><p data-source-line="5">对段落间的文本进行分割</p><pre style="display:none;"></pre>',4),K={class:"vuedoc-demo"},L={class:"vuedoc-demo__inner"},O={class:"vuedoc-demo__preview"},Q={ref:"vdpv_0Ref",class:"vuedoc-demo__sourceref"},U=i(`<div class="vuedoc__code"><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>
    这是文本内容
    <span class="hljs-tag">&lt;<span class="hljs-name">ak-divider</span> /&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>也可以是虚线 borderStyle=&quot;dashed&quot;<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">ak-divider</span> <span class="hljs-attr">borderStyle</span>=<span class="hljs-string">&quot;dashed&quot;</span> <span class="hljs-attr">padding</span>=<span class="hljs-string">&quot;10px&quot;</span> /&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这是文本内容 borderStyle=&quot;dotted&quot;<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">ak-divider</span> <span class="hljs-attr">borderStyle</span>=<span class="hljs-string">&quot;dotted&quot;</span> /&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这是文本内容<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">ak-divider</span> <span class="hljs-attr">borderStyle</span>=<span class="hljs-string">&quot;double&quot;</span> /&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>
</span></code></pre></div>`,1),W=[U],X=s("h3",{id:"设置文案提示","data-source-line":"22"},[s("a",{class:"markdownIt-Anchor",href:"#设置文案提示"},"#"),p(" 设置文案提示")],-1),Y=s("p",{"data-source-line":"24"},"对段落间的文本进行分割",-1),Z=s("pre",{style:{display:"none"}},null,-1),ss={class:"vuedoc-demo"},as={class:"vuedoc-demo__inner"},ns={class:"vuedoc-demo__preview"},ts={ref:"vdpv_1Ref",class:"vuedoc-demo__sourceref"},es=i(`<div class="vuedoc__code"><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>
    这是文本内容
    <span class="hljs-tag">&lt;<span class="hljs-name">ak-divider</span> <span class="hljs-attr">contentPosition</span>=<span class="hljs-string">&quot;left&quot;</span>&gt;</span>标题<span class="hljs-tag">&lt;/<span class="hljs-name">ak-divider</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这是文本内容<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>
</span></code></pre></div>`,1),ls=[es],ds=s("h3",{id:"垂直分隔线","data-source-line":"36"},[s("a",{class:"markdownIt-Anchor",href:"#垂直分隔线"},"#"),p(" 垂直分隔线")],-1),os=s("p",{"data-source-line":"38"},"对段落间的文本进行分割",-1),cs=s("pre",{style:{display:"none"}},null,-1),ps={class:"vuedoc-demo"},is={class:"vuedoc-demo__inner"},rs={class:"vuedoc-demo__preview"},hs={ref:"vdpv_2Ref",class:"vuedoc-demo__sourceref"},_s=i(`<div class="vuedoc__code"><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>编辑<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">ak-divider</span> <span class="hljs-attr">direction</span>=<span class="hljs-string">&quot;vertical&quot;</span> <span class="hljs-attr">borderStyle</span>=<span class="hljs-string">&quot;dashed&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ak-divider</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>查看<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">ak-divider</span> <span class="hljs-attr">direction</span>=<span class="hljs-string">&quot;vertical&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ak-divider</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>删除<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>
</span></code></pre></div>`,1),vs=[_s],gs=i('<h2 id="api" data-source-line="52"><a class="markdownIt-Anchor" href="#api">#</a> API</h2><h3 id="divider" data-source-line="54"><a class="markdownIt-Anchor" href="#divider">#</a> Divider</h3><table data-source-line="56"><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>direction</td><td>string</td><td>设置分割线方向，可选 horizontal / vertical</td></tr><tr><td>border-style</td><td>string</td><td>线条类型，可选<code>dashed</code>、<code>dotted</code>、<code>soild</code></td></tr><tr><td>content-position</td><td>string</td><td>设置分割线文案的位置，可选<code>left</code>、<code>right</code>、<code>center</code></td></tr><tr><td>padding</td><td>string</td><td>上下/左右边距</td></tr></tbody></table>',3);function js(a,t,n,v,g,d){const f=l("vdpv_0"),o=l("vdpv_1"),c=l("vdpv_2");return h(),_("div",G,[J,s("div",K,[s("div",L,[s("div",O,[e(f)]),s("div",{style:j({height:a.vdpv_0Height+"px"}),class:"vuedoc-demo__source"},[s("div",Q,W,512)],4),s("div",{class:"vuedoc-demo__footer",onClick:t[0]||(t[0]=k=>a.toggleCode(0))},u(a.vdpv_0Height>0?"hidden":"show"),1)])]),X,Y,Z,s("div",ss,[s("div",as,[s("div",ns,[e(o)]),s("div",{style:j({height:a.vdpv_1Height+"px"}),class:"vuedoc-demo__source"},[s("div",ts,ls,512)],4),s("div",{class:"vuedoc-demo__footer",onClick:t[1]||(t[1]=k=>a.toggleCode(1))},u(a.vdpv_1Height>0?"hidden":"show"),1)])]),ds,os,cs,s("div",ps,[s("div",is,[s("div",rs,[e(c)]),s("div",{style:j({height:a.vdpv_2Height+"px"}),class:"vuedoc-demo__source"},[s("div",hs,vs,512)],4),s("div",{class:"vuedoc-demo__footer",onClick:t[2]||(t[2]=k=>a.toggleCode(2))},u(a.vdpv_2Height>0?"hidden":"show"),1)])]),gs])}const ms=r(F,[["render",js]]);export{ms as default};
