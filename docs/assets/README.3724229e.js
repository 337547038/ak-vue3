var s=Object.defineProperty,a=Object.defineProperties,l=Object.getOwnPropertyDescriptors,n=Object.getOwnPropertySymbols,t=Object.prototype.hasOwnProperty,e=Object.prototype.propertyIsEnumerable,p=(a,l,n)=>l in a?s(a,l,{enumerable:!0,configurable:!0,writable:!0,value:n}):a[l]=n;import{r,a as c,o,h as d,w as h,f as i,c as u,F as j,g as m,b as v,d as g,l as f,C as _,B as k,t as y,S as q}from"./vendor.393926ba.js";const b={setup(s){const a=r("");return(s,l)=>{const n=c("ak-input"),t=c("ak-form-item");return o(),d(t,{label:"title"},{default:h((()=>[i(n,{modelValue:a.value,"onUpdate:modelValue":l[0]||(l[0]=s=>a.value=s)},null,8,["modelValue"])])),_:1})}}},w={setup:()=>({value:r(""),value2:r(""),rules:r([{type:"tips",msg:"获取焦点提示信息"},{type:"required",msg:"必填项"},{type:"number",msg:"只能输入数字"}])})};w.render=function(s,a,l,n,t,e){const p=c("ak-input"),r=c("ak-form-item");return o(),u(j,null,[i(r,{label:"title",rules:n.rules},{default:h((()=>[i(p,{modelValue:n.value,"onUpdate:modelValue":a[0]||(a[0]=s=>n.value=s),placeholder:"输入时触发"},null,8,["modelValue"])])),_:1},8,["rules"]),i(r,{label:"title",rules:n.rules,trigger:"blur"},{default:h((()=>[i(p,{modelValue:n.value2,"onUpdate:modelValue":a[1]||(a[1]=s=>n.value2=s),placeholder:"失去焦点触发"},null,8,["modelValue"])])),_:1},8,["rules"])],64)};const V={setup(s){const a=r(""),l=r(""),n=r([{type:"tips",msg:"获取焦点提示信息"},{type:"required",msg:"必填项"},{type:"number",msg:"只能输入数字"}]);return(s,t)=>{const e=c("ak-input"),p=c("ak-form-item");return o(),u(j,null,[i(p,{label:"title",verify:"mobile"},{default:h((()=>[i(e,{modelValue:a.value,"onUpdate:modelValue":t[0]||(t[0]=s=>a.value=s),placeholder:"手机号验证"},null,8,["modelValue"])])),_:1}),i(p,{label:"title",rules:n.value,verify:"mobile"},{default:h((()=>[i(e,{modelValue:l.value,"onUpdate:modelValue":t[1]||(t[1]=s=>l.value=s),placeholder:"手机号和必填验证"},null,8,["modelValue"])])),_:1},8,["rules"])],64)}}},I=m("submit"),H={setup(s){const a=r(),l=r(""),n=r([{type:"required",msg:"年龄不能为空"},{type:"rule",msg:"年龄必须大于1岁，且不能超过120岁",rule:"/^(?:[1-9][0-9]?|1[01][0-9]|120)$/"}]),t=()=>{a.value.validate().then((s=>{console.log(s)})).catch((s=>{console.log(s)}))};return(s,e)=>{const p=c("ak-input"),r=c("ak-form-item"),d=c("ak-button");return o(),u(j,null,[i(r,{label:"age",rules:n.value,ref:a},{default:h((()=>[i(p,{modelValue:l.value,"onUpdate:modelValue":e[0]||(e[0]=s=>l.value=s),placeholder:"请输入年龄"},null,8,["modelValue"])])),_:1},8,["rules"]),i(d,{onClick:t},{default:h((()=>[I])),_:1})],64)}}},x={setup(s){const a=r(""),l=r(""),n=r([{type:"required",msg:"密码不能为空"},{type:"fn",msg:"两次输入的密码不一致",validator:s=>s===a.value}]);return(s,t)=>{const e=c("ak-input"),p=c("ak-form-item");return o(),u(j,null,[i(p,{label:"password",verify:"required"},{default:h((()=>[i(e,{modelValue:a.value,"onUpdate:modelValue":t[0]||(t[0]=s=>a.value=s),placeholder:"请输入密码"},null,8,["modelValue"])])),_:1}),i(p,{label:"password",rules:n.value},{default:h((()=>[i(e,{modelValue:l.value,"onUpdate:modelValue":t[1]||(t[1]=s=>l.value=s),placeholder:"请再次输入密码"},null,8,["modelValue"])])),_:1},8,["rules"])],64)}}},P={setup(s){const a=r({value:"abc"}),l=r({value:"112",options:[{label:"选项1"}],placeholder:"请选择"});return(s,n)=>{const t=c("ak-form-item");return o(),u("div",null,[i(t,{label:"input",type:"input",data:a.value},null,8,["data"]),i(t,{label:"select",type:"select",data:l.value},null,8,["data"])])}}},C=v("br",null,null,-1),R=v("br",null,null,-1),A=g({components:{vdpv_0:b,vdpv_1:w,vdpv_2:V,vdpv_3:H,vdpv_4:x,vdpv_5:P,vdpv_6:{setup(s){const a=r(),l=r({value:"abc"}),n=r({value:"112",options:[{label:"选项1"}],placeholder:"请选择"});return setTimeout((()=>{a.value="123"}),1e3),(s,t)=>{const e=c("ak-field");return o(),u("div",null,[i(e,{type:"input",data:l.value,modelValue:a.value,"onUpdate:modelValue":t[0]||(t[0]=s=>a.value=s)},null,8,["data","modelValue"]),C,R,i(e,{type:"select",data:n.value},null,8,["data"])])}}}},setup(s){const c=r(),o=r(),d=r(),h=r(),i=r(),u=r(),j=r(),m=[c,o,d,h,i,u,j],v=f({vdpv_0Height:0,vdpv_1Height:0,vdpv_2Height:0,vdpv_3Height:0,vdpv_4Height:0,vdpv_5Height:0,vdpv_6Height:0});return g=((s,a)=>{for(var l in a||(a={}))t.call(a,l)&&p(s,l,a[l]);if(n)for(var l of n(a))e.call(a,l)&&p(s,l,a[l]);return s})({toggleCode:s=>{const a="vdpv_"+s;0===v[a+"Height"]?v[a+"Height"]=(m[s].value?m[s].value.offsetHeight:0)||0:v[a+"Height"]=0}},_(v)),a(g,l({vdpv_0Ref:c,vdpv_1Ref:o,vdpv_2Ref:d,vdpv_3Ref:h,vdpv_4Ref:i,vdpv_5Ref:u,vdpv_6Ref:j}));var g}});A.$vd={matter:{},toc:[{content:"FormItem 表单集合",anchor:"formitem-表单集合",level:1},{content:"基本使用",anchor:"基本使用",level:3},{content:"校验",anchor:"校验",level:3},{content:"快速校验",anchor:"快速校验",level:3},{content:"自定义验证规则",anchor:"自定义验证规则",level:3},{content:"回调验证",anchor:"回调验证",level:3},{content:"快速输入常见组件类型",anchor:"快速输入常见组件类型",level:3},{content:"可单独使用`Field`",anchor:"可单独使用field",level:3},{content:"API",anchor:"api",level:2},{content:"FormItem Props",anchor:"formitem-props",level:3},{content:"FormItem Rules 验证规则",anchor:"formitem-rules-验证规则",level:3},{content:"FormItem Methods",anchor:"formitem-methods",level:3},{content:"Field Props",anchor:"field-props",level:3}]};const F=A,O={class:"vuedoc  "},D=q('<h1 id="formitem-表单集合" data-source-line="3"><a class="markdownIt-Anchor" href="#formitem-表单集合">#</a> FormItem 表单集合</h1><p data-source-line="5">强大的校验功能，使用简单快捷</p><h3 id="基本使用" data-source-line="7"><a class="markdownIt-Anchor" href="#基本使用">#</a> 基本使用</h3><pre style="display:none;"></pre>',4),U={class:"vuedoc-demo "},S={class:"vuedoc-demo__inner"},E={class:"vuedoc-demo__preview"},M={ref:"vdpv_0Ref",class:"vuedoc-demo__sourceref"},T=[q('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">ak-form-item</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;title&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">ak-form-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">setup</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n  <span class="hljs-keyword">const</span> value = ref(<span class="hljs-string">&#39;&#39;</span>)\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n</span></code></pre></div>',1)],$=v("h3",{id:"校验","data-source-line":"23"},[v("a",{class:"markdownIt-Anchor",href:"#校验"},"#"),m(" 校验")],-1),L=v("p",{"data-source-line":"25"},[m("使用"),v("code",null,"rules"),m("规则校验")],-1),z=v("pre",{style:{display:"none"}},null,-1),B={class:"vuedoc-demo "},W={class:"vuedoc-demo__inner"},G={class:"vuedoc-demo__preview"},J={ref:"vdpv_1Ref",class:"vuedoc-demo__sourceref"},K=[q('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">ak-form-item</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;title&quot;</span> <span class="hljs-attr">:rules</span>=<span class="hljs-string">&quot;rules&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;输入时触发&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">ak-form-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">ak-form-item</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;title&quot;</span> <span class="hljs-attr">:rules</span>=<span class="hljs-string">&quot;rules&quot;</span> <span class="hljs-attr">trigger</span>=<span class="hljs-string">&quot;blur&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value2&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;失去焦点触发&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">ak-form-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> {ref} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> value = ref(<span class="hljs-string">&#39;&#39;</span>)\n    <span class="hljs-keyword">const</span> value2 = ref(<span class="hljs-string">&#39;&#39;</span>)\n    <span class="hljs-keyword">const</span> rules = ref([\n      {<span class="hljs-attr">type</span>: <span class="hljs-string">&#39;tips&#39;</span>, <span class="hljs-attr">msg</span>: <span class="hljs-string">&#39;获取焦点提示信息&#39;</span>},\n      {<span class="hljs-attr">type</span>: <span class="hljs-string">&#39;required&#39;</span>, <span class="hljs-attr">msg</span>: <span class="hljs-string">&#39;必填项&#39;</span>},\n      {<span class="hljs-attr">type</span>: <span class="hljs-string">&#39;number&#39;</span>, <span class="hljs-attr">msg</span>: <span class="hljs-string">&#39;只能输入数字&#39;</span>}\n    ])\n    <span class="hljs-keyword">return</span> {\n      value,\n      value2,\n      rules\n    }\n  }\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n</span></code></pre></div>',1)],N=v("h3",{id:"快速校验","data-source-line":"59"},[v("a",{class:"markdownIt-Anchor",href:"#快速校验"},"#"),m(" 快速校验")],-1),Q=v("p",{"data-source-line":"61"},[m("对于大量的表单验证不需要精确提示时，如验证为空时统一提示为必填字段，可通过设置"),v("code",null,"verify"),m("，多个用逗号隔开，也可同时和"),v("code",null,"rules"),m("规则校验一起使用")],-1),X=v("pre",{style:{display:"none"}},null,-1),Y={class:"vuedoc-demo "},Z={class:"vuedoc-demo__inner"},ss={class:"vuedoc-demo__preview"},as={ref:"vdpv_2Ref",class:"vuedoc-demo__sourceref"},ls=[q('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">ak-form-item</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;title&quot;</span> <span class="hljs-attr">verify</span>=<span class="hljs-string">&quot;mobile&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;手机号验证&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">ak-form-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">ak-form-item</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;title&quot;</span> <span class="hljs-attr">:rules</span>=<span class="hljs-string">&quot;rules&quot;</span> <span class="hljs-attr">verify</span>=<span class="hljs-string">&quot;mobile&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value2&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;手机号和必填验证&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">ak-form-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">setup</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n  <span class="hljs-keyword">const</span> value = ref(<span class="hljs-string">&#39;&#39;</span>)\n  <span class="hljs-keyword">const</span> value2 = ref(<span class="hljs-string">&#39;&#39;</span>)\n  <span class="hljs-keyword">const</span> rules = ref([\n    { <span class="hljs-attr">type</span>: <span class="hljs-string">&#39;tips&#39;</span>, <span class="hljs-attr">msg</span>: <span class="hljs-string">&#39;获取焦点提示信息&#39;</span> },\n    { <span class="hljs-attr">type</span>: <span class="hljs-string">&#39;required&#39;</span>, <span class="hljs-attr">msg</span>: <span class="hljs-string">&#39;必填项&#39;</span> },\n    { <span class="hljs-attr">type</span>: <span class="hljs-string">&#39;number&#39;</span>, <span class="hljs-attr">msg</span>: <span class="hljs-string">&#39;只能输入数字&#39;</span> }\n  ])\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n\n\n</span></code></pre></div>',1)],ns=v("h3",{id:"自定义验证规则","data-source-line":"88"},[v("a",{class:"markdownIt-Anchor",href:"#自定义验证规则"},"#"),m(" 自定义验证规则")],-1),ts=v("pre",{style:{display:"none"}},null,-1),es={class:"vuedoc-demo "},ps={class:"vuedoc-demo__inner"},rs={class:"vuedoc-demo__preview"},cs={ref:"vdpv_3Ref",class:"vuedoc-demo__sourceref"},os=[q('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">ak-form-item</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;age&quot;</span> <span class="hljs-attr">:rules</span>=<span class="hljs-string">&quot;rules&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;formItemEl&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入年龄&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">ak-form-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">ak-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;submit&quot;</span>&gt;</span>submit<span class="hljs-tag">&lt;/<span class="hljs-name">ak-button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">setup</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n  <span class="hljs-keyword">const</span> formItemEl = ref()\n  <span class="hljs-keyword">const</span> value = ref(<span class="hljs-string">&#39;&#39;</span>)\n  <span class="hljs-keyword">const</span> rules = ref([\n    { <span class="hljs-attr">type</span>: <span class="hljs-string">&#39;required&#39;</span>, <span class="hljs-attr">msg</span>: <span class="hljs-string">&#39;年龄不能为空&#39;</span> },\n    {\n      <span class="hljs-attr">type</span>: <span class="hljs-string">&#39;rule&#39;</span>,\n      <span class="hljs-attr">msg</span>: <span class="hljs-string">&#39;年龄必须大于1岁，且不能超过120岁&#39;</span>,\n      <span class="hljs-attr">rule</span>: <span class="hljs-string">&#39;/^(?:[1-9][0-9]?|1[01][0-9]|120)$/&#39;</span>\n    }\n  ])\n  <span class="hljs-keyword">const</span> submit = <span class="hljs-function">() =&gt;</span> {\n    formItemEl.value\n      .validate()\n      .then(<span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> {\n        <span class="hljs-built_in">console</span>.log(res)\n      })\n      .catch(<span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> {\n        <span class="hljs-built_in">console</span>.log(res)\n      })\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n</span></code></pre></div>',1)],ds=v("h3",{id:"回调验证","data-source-line":"124"},[v("a",{class:"markdownIt-Anchor",href:"#回调验证"},"#"),m(" 回调验证")],-1),hs=v("pre",{style:{display:"none"}},null,-1),is={class:"vuedoc-demo "},us={class:"vuedoc-demo__inner"},js={class:"vuedoc-demo__preview"},ms={ref:"vdpv_4Ref",class:"vuedoc-demo__sourceref"},vs=[q('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">ak-form-item</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">verify</span>=<span class="hljs-string">&quot;required&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入密码&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">ak-form-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">ak-form-item</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">:rules</span>=<span class="hljs-string">&quot;rules&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value2&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请再次输入密码&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">ak-form-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">setup</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n  <span class="hljs-keyword">const</span> value = ref(<span class="hljs-string">&#39;&#39;</span>)\n  <span class="hljs-keyword">const</span> value2 = ref(<span class="hljs-string">&#39;&#39;</span>)\n  <span class="hljs-keyword">const</span> rules = ref([\n    { <span class="hljs-attr">type</span>: <span class="hljs-string">&#39;required&#39;</span>, <span class="hljs-attr">msg</span>: <span class="hljs-string">&#39;密码不能为空&#39;</span> },\n    {\n      <span class="hljs-attr">type</span>: <span class="hljs-string">&#39;fn&#39;</span>,\n      <span class="hljs-attr">msg</span>: <span class="hljs-string">&#39;两次输入的密码不一致&#39;</span>,\n      <span class="hljs-attr">validator</span>: <span class="hljs-function">(<span class="hljs-params">val</span>) =&gt;</span> {\n        <span class="hljs-keyword">return</span> val === value.value\n      }\n    }\n  ])\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n</span></code></pre></div>',1)],gs=v("h3",{id:"快速输入常见组件类型","data-source-line":"154"},[v("a",{class:"markdownIt-Anchor",href:"#快速输入常见组件类型"},"#"),m(" 快速输入常见组件类型")],-1),fs=v("p",{"data-source-line":"156"},[m("支持类型 "),v("code",null,"'input'、'radio'、'checkbox'、'datePicker'、'select'、'switch'、'textarea'、'timeSelect'、'timePicker'")],-1),_s=v("pre",{style:{display:"none"}},null,-1),ks={class:"vuedoc-demo "},ys={class:"vuedoc-demo__inner"},qs={class:"vuedoc-demo__preview"},bs={ref:"vdpv_5Ref",class:"vuedoc-demo__sourceref"},ws=[q('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-form-item</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;input&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;input&quot;</span> <span class="hljs-attr">:data</span>=<span class="hljs-string">&quot;inputData&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-form-item</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;select&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;select&quot;</span> <span class="hljs-attr">:data</span>=<span class="hljs-string">&quot;selectData&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">setup</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n  <span class="hljs-keyword">const</span> inputData = ref({ <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;abc&#39;</span> })\n  <span class="hljs-keyword">const</span> selectData = ref({ <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;112&#39;</span>, <span class="hljs-attr">options</span>: [{ <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;选项1&#39;</span> }], <span class="hljs-attr">placeholder</span>:<span class="hljs-string">&#39;请选择&#39;</span> })\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n</span></code></pre></div>',1)],Vs=v("h3",{id:"可单独使用field","data-source-line":"173"},[v("a",{class:"markdownIt-Anchor",href:"#可单独使用field"},"#"),m(" 可单独使用"),v("code",null,"Field")],-1),Is=v("p",{"data-source-line":"175"},"可使用data.value对控件设置值，也可以是v-model(优先)",-1),Hs=v("pre",{style:{display:"none"}},null,-1),xs={class:"vuedoc-demo "},Ps={class:"vuedoc-demo__inner"},Cs={class:"vuedoc-demo__preview"},Rs={ref:"vdpv_6Ref",class:"vuedoc-demo__sourceref"},As=[q('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-field</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;input&quot;</span> <span class="hljs-attr">:data</span>=<span class="hljs-string">&quot;inputData&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value1&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-field</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;select&quot;</span> <span class="hljs-attr">:data</span>=<span class="hljs-string">&quot;selectData&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">setup</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n  <span class="hljs-keyword">const</span> value1 = ref()\n  <span class="hljs-keyword">const</span> inputData = ref({ <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;abc&#39;</span> })\n  <span class="hljs-keyword">const</span> selectData = ref({\n    <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;112&#39;</span>,\n    <span class="hljs-attr">options</span>: [{ <span class="hljs-attr">label</span>: <span class="hljs-string">&#39;选项1&#39;</span> }],\n    <span class="hljs-attr">placeholder</span>: <span class="hljs-string">&#39;请选择&#39;</span>\n  })\n  <span class="hljs-comment">// 模拟延时设值</span>\n  <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> {\n    value1.value = <span class="hljs-string">&#39;123&#39;</span>\n  }, <span class="hljs-number">1000</span>)\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n</span></code></pre></div>',1)],Fs=q('<h2 id="api" data-source-line="203"><a class="markdownIt-Anchor" href="#api">#</a> API</h2><h3 id="formitem-props" data-source-line="205"><a class="markdownIt-Anchor" href="#formitem-props">#</a> FormItem Props</h3><table data-source-line="207"><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>label</td><td>string</td><td>显示的标签名</td></tr><tr><td>labelVisible</td><td>boolean/false</td><td>隐藏label</td></tr><tr><td>prop</td><td>string</td><td>表单校验时关联表单的校验规则</td></tr><tr><td>required</td><td>boolean/true</td><td>是否根据验证规则自动生成必填样式名</td></tr><tr><td>verify</td><td>string</td><td>快速验证，支持required, mobile, tel, mail, digits, number,phone 多个用逗号隔开</td></tr><tr><td>rules</td><td>array</td><td>校验规则</td></tr><tr><td>showMessage</td><td>boolean/true</td><td>显示错误提示，在form使用时，优先使用form的设置</td></tr><tr><td>trigger</td><td>string/change</td><td>change和blur两种，在form使用时，优先使用form的设置</td></tr><tr><td>labelWidth</td><td>string</td><td>label的宽度</td></tr><tr><td>size</td><td>string</td><td>用于控制该表单内组件的尺寸,支持 <code>large</code>、<code>normal</code>、<code>small</code>、<code>mini</code> 四种尺寸，默认为 <code>normal</code></td></tr><tr><td>error</td><td>string</td><td>表单域验证错误信息, 设置该值会使表单验证状态变为error，并显示该错误信息</td></tr><tr><td>type</td><td>string</td><td>可快速输出控件类型，可选<code>input、radio、checkbox、datePicker、select、switch、textarea、timeSelect、timePicker</code></td></tr><tr><td>data</td><td>Object</td><td>仅在type不为空时，对应当前组件的props所有参数</td></tr><tr><td>v-model</td><td>any</td><td>仅在type不为空时，当前控件的值</td></tr></tbody></table><h3 id="formitem-rules-验证规则" data-source-line="224"><a class="markdownIt-Anchor" href="#formitem-rules-验证规则">#</a> FormItem Rules 验证规则</h3><table data-source-line="226"><thead><tr><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>required</td><td>为空</td></tr><tr><td>maxLength</td><td>最大字符</td></tr><tr><td>minLength</td><td>最小字符</td></tr><tr><td>mobile</td><td>手机号格式</td></tr><tr><td>tel</td><td>固话</td></tr><tr><td>phone</td><td>固话或手机</td></tr><tr><td>mail</td><td>邮箱格式</td></tr><tr><td>digits</td><td>正整数</td></tr><tr><td>number</td><td>数字</td></tr><tr><td>tips</td><td>获得焦点且值为空时显示输入提示</td></tr><tr><td>rule</td><td>自定义验证规则</td></tr><tr><td>fn</td><td>回调验证</td></tr></tbody></table><h3 id="formitem-methods" data-source-line="241"><a class="markdownIt-Anchor" href="#formitem-methods">#</a> FormItem Methods</h3><table data-source-line="243"><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>validate</td><td></td><td>对单个表单项进行校验的方法，Promise返回验证结果</td></tr><tr><td>clearTips</td><td></td><td>用于清空验证提示信息，恢复初始状态</td></tr></tbody></table><h3 id="field-props" data-source-line="248"><a class="markdownIt-Anchor" href="#field-props">#</a> Field Props</h3><table data-source-line="250"><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>type</td><td>string</td><td>可快速输出控件类型，可选<code>input、radio、checkbox、datePicker、select、switch、textarea、timeSelect、timePicker</code></td></tr><tr><td>data</td><td>Object</td><td>对应当前组件的props所有参数</td></tr><tr><td>v-model</td><td>any</td><td>当前控件的值</td></tr></tbody></table>',9);F.render=function(s,a,l,n,t,e){const p=c("vdpv_0"),r=c("vdpv_1"),d=c("vdpv_2"),h=c("vdpv_3"),j=c("vdpv_4"),m=c("vdpv_5"),g=c("vdpv_6");return o(),u("div",O,[D,v("div",U,[v("div",S,[v("div",E,[i(p)]),v("div",{style:k({height:s.vdpv_0Height+"px"}),class:"vuedoc-demo__source"},[v("div",M,T,512)],4),v("div",{class:"vuedoc-demo__footer",onClick:a[0]||(a[0]=a=>s.toggleCode(0))},y(s.vdpv_0Height>0?"hidden":"show"),1)])]),$,L,z,v("div",B,[v("div",W,[v("div",G,[i(r)]),v("div",{style:k({height:s.vdpv_1Height+"px"}),class:"vuedoc-demo__source"},[v("div",J,K,512)],4),v("div",{class:"vuedoc-demo__footer",onClick:a[1]||(a[1]=a=>s.toggleCode(1))},y(s.vdpv_1Height>0?"hidden":"show"),1)])]),N,Q,X,v("div",Y,[v("div",Z,[v("div",ss,[i(d)]),v("div",{style:k({height:s.vdpv_2Height+"px"}),class:"vuedoc-demo__source"},[v("div",as,ls,512)],4),v("div",{class:"vuedoc-demo__footer",onClick:a[2]||(a[2]=a=>s.toggleCode(2))},y(s.vdpv_2Height>0?"hidden":"show"),1)])]),ns,ts,v("div",es,[v("div",ps,[v("div",rs,[i(h)]),v("div",{style:k({height:s.vdpv_3Height+"px"}),class:"vuedoc-demo__source"},[v("div",cs,os,512)],4),v("div",{class:"vuedoc-demo__footer",onClick:a[3]||(a[3]=a=>s.toggleCode(3))},y(s.vdpv_3Height>0?"hidden":"show"),1)])]),ds,hs,v("div",is,[v("div",us,[v("div",js,[i(j)]),v("div",{style:k({height:s.vdpv_4Height+"px"}),class:"vuedoc-demo__source"},[v("div",ms,vs,512)],4),v("div",{class:"vuedoc-demo__footer",onClick:a[4]||(a[4]=a=>s.toggleCode(4))},y(s.vdpv_4Height>0?"hidden":"show"),1)])]),gs,fs,_s,v("div",ks,[v("div",ys,[v("div",qs,[i(m)]),v("div",{style:k({height:s.vdpv_5Height+"px"}),class:"vuedoc-demo__source"},[v("div",bs,ws,512)],4),v("div",{class:"vuedoc-demo__footer",onClick:a[5]||(a[5]=a=>s.toggleCode(5))},y(s.vdpv_5Height>0?"hidden":"show"),1)])]),Vs,Is,Hs,v("div",xs,[v("div",Ps,[v("div",Cs,[i(g)]),v("div",{style:k({height:s.vdpv_6Height+"px"}),class:"vuedoc-demo__source"},[v("div",Rs,As,512)],4),v("div",{class:"vuedoc-demo__footer",onClick:a[6]||(a[6]=a=>s.toggleCode(6))},y(s.vdpv_6Height>0?"hidden":"show"),1)])]),Fs])};export{F as default};
