var s=Object.defineProperty,a=Object.defineProperties,n=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,t=Object.prototype.hasOwnProperty,e=Object.prototype.propertyIsEnumerable,p=(a,n,l)=>n in a?s(a,n,{enumerable:!0,configurable:!0,writable:!0,value:l}):a[n]=l;import{a as c,o,c as d,f as r,w as h,g,d as u,r as i,F as j,e as v,h as m,t as _,V as f,l as k,C as q,b as y,B as b,S as w}from"./vendor.393926ba.js";const C={},H=g("标签一"),x=g("标签二"),I=g("标签三"),z=g("标签四"),T=g("自定样式");C.render=function(s,a){const n=c("ak-tag");return o(),d("div",null,[r(n,null,{default:h((()=>[H])),_:1}),r(n,{type:"success"},{default:h((()=>[x])),_:1}),r(n,{type:"warning"},{default:h((()=>[I])),_:1}),r(n,{type:"danger"},{default:h((()=>[z])),_:1}),r(n,{type:"danger",color:"#fff",bgColor:"#c642e7",borderColor:"#c642e7"},{default:h((()=>[T])),_:1})])};const A={},O=g("默认标签"),P=g("中等标签"),R=g("小型标签"),V=g("超小标签");A.render=function(s,a){const n=c("ak-tag");return o(),d("div",null,[r(n,{size:"large"},{default:h((()=>[O])),_:1}),r(n,{size:"default"},{default:h((()=>[P])),_:1}),r(n,{size:"small"},{default:h((()=>[R])),_:1}),r(n,{size:"mini"},{default:h((()=>[V])),_:1})])};const K={},S=g("标签一"),B=g("标签二"),D=g("标签三"),E=g("标签3");K.render=function(s,a){const n=c("ak-tag");return o(),d("div",null,[r(n,{closable:!0},{default:h((()=>[S])),_:1}),r(n,{closable:!0,type:"success"},{default:h((()=>[B])),_:1}),r(n,{closable:!0,type:"warning"},{default:h((()=>[D])),_:1}),r(n,{closable:!0,type:"danger"},{default:h((()=>[E])),_:1})])};var F=u({setup(s){const a=i(["标签一","标签二","标签三"]),n=i(),l=()=>{n.value&&(a.value.push(n.value),n.value="")};return(s,t)=>{const e=c("ak-tag"),p=c("ak-input");return o(),d("div",null,[(o(!0),d(j,null,v(a.value,((s,n)=>(o(),m(e,{key:s,closable:!0,onClose:s=>(s=>{a.value.splice(s,1)})(n)},{default:h((()=>[g(_(s),1)])),_:2},1032,["onClose"])))),128)),r(p,{modelValue:n.value,"onUpdate:modelValue":t[0]||(t[0]=s=>n.value=s),size:"small",onKeyup:f(l,["enter"])},null,8,["modelValue","onKeyup"])])}}});const U=u({components:{vdpv_0:C,vdpv_1:A,vdpv_2:K,vdpv_3:F},setup(s){const c=i(),o=i(),d=i(),r=i(),h=[c,o,d,r],g=k({vdpv_0Height:0,vdpv_1Height:0,vdpv_2Height:0,vdpv_3Height:0});return u=((s,a)=>{for(var n in a||(a={}))t.call(a,n)&&p(s,n,a[n]);if(l)for(var n of l(a))e.call(a,n)&&p(s,n,a[n]);return s})({toggleCode:s=>{const a="vdpv_"+s;0===g[a+"Height"]?g[a+"Height"]=(h[s].value?h[s].value.offsetHeight:0)||0:g[a+"Height"]=0}},q(g)),a(u,n({vdpv_0Ref:c,vdpv_1Ref:o,vdpv_2Ref:d,vdpv_3Ref:r}));var u}});U.$vd={matter:{},toc:[{content:"Tag 标签",anchor:"tag-标签",level:1},{content:"基本使用",anchor:"基本使用",level:3},{content:"不同尺寸",anchor:"不同尺寸",level:3},{content:"可移除标签",anchor:"可移除标签",level:3},{content:"动态编辑标签",anchor:"动态编辑标签",level:3},{content:"API",anchor:"api",level:2},{content:"Tag Props",anchor:"tag-props",level:3}]};const $=U,G={class:"vuedoc  "},J=w('<h1 id="tag-标签" data-source-line="1"><a class="markdownIt-Anchor" href="#tag-标签">#</a> Tag 标签</h1><h3 id="基本使用" data-source-line="3"><a class="markdownIt-Anchor" href="#基本使用">#</a> 基本使用</h3><p data-source-line="5">由<code>type</code>属性来选择<code>tag</code>的类型，支持 <code>default</code>、<code>success</code>、<code>warning</code>、<code>danger</code>类型，默认为 <code>default</code>。</p><pre style="display:none;"></pre>',4),L={class:"vuedoc-demo "},M={class:"vuedoc-demo__inner"},N={class:"vuedoc-demo__preview"},Q={ref:"vdpv_0Ref",class:"vuedoc-demo__sourceref"},W=[w('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-tag</span>&gt;</span>标签一<span class="hljs-tag">&lt;/<span class="hljs-name">ak-tag</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-tag</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;success&quot;</span>&gt;</span>标签二<span class="hljs-tag">&lt;/<span class="hljs-name">ak-tag</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-tag</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;warning&quot;</span>&gt;</span>标签三<span class="hljs-tag">&lt;/<span class="hljs-name">ak-tag</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-tag</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;danger&quot;</span>&gt;</span>标签四<span class="hljs-tag">&lt;/<span class="hljs-name">ak-tag</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-tag</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;danger&quot;</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#fff&quot;</span> <span class="hljs-attr">bgColor</span>=<span class="hljs-string">&quot;#c642e7&quot;</span> <span class="hljs-attr">borderColor</span>=<span class="hljs-string">&quot;#c642e7&quot;</span>&gt;</span>自定样式<span class="hljs-tag">&lt;/<span class="hljs-name">ak-tag</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n</span></code></pre></div>',1)],X=y("h3",{id:"不同尺寸","data-source-line":"19"},[y("a",{class:"markdownIt-Anchor",href:"#不同尺寸"},"#"),g(" 不同尺寸")],-1),Y=y("p",{"data-source-line":"21"},[y("code",null,"Tag"),g(" 组件提供除了默认值以外的三种尺寸，可以在不同场景下选择合适的按钮尺寸。")],-1),Z=y("pre",{style:{display:"none"}},null,-1),ss={class:"vuedoc-demo "},as={class:"vuedoc-demo__inner"},ns={class:"vuedoc-demo__preview"},ls={ref:"vdpv_1Ref",class:"vuedoc-demo__sourceref"},ts=[w('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-tag</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;large&quot;</span>&gt;</span>默认标签<span class="hljs-tag">&lt;/<span class="hljs-name">ak-tag</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-tag</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;default&quot;</span>&gt;</span>中等标签<span class="hljs-tag">&lt;/<span class="hljs-name">ak-tag</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-tag</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;small&quot;</span>&gt;</span>小型标签<span class="hljs-tag">&lt;/<span class="hljs-name">ak-tag</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-tag</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;mini&quot;</span>&gt;</span>超小标签<span class="hljs-tag">&lt;/<span class="hljs-name">ak-tag</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n</span></code></pre></div>',1)],es=y("h3",{id:"可移除标签","data-source-line":"34"},[y("a",{class:"markdownIt-Anchor",href:"#可移除标签"},"#"),g(" 可移除标签")],-1),ps=y("p",{"data-source-line":"36"},[g("设置"),y("code",null,"closable"),g("属性可以定义一个标签是否可移除")],-1),cs=y("pre",{style:{display:"none"}},null,-1),os={class:"vuedoc-demo "},ds={class:"vuedoc-demo__inner"},rs={class:"vuedoc-demo__preview"},hs={ref:"vdpv_2Ref",class:"vuedoc-demo__sourceref"},gs=[w('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-tag</span> <span class="hljs-attr">:closable</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span>标签一<span class="hljs-tag">&lt;/<span class="hljs-name">ak-tag</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-tag</span> <span class="hljs-attr">:closable</span>=<span class="hljs-string">&quot;true&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;success&quot;</span>&gt;</span>标签二<span class="hljs-tag">&lt;/<span class="hljs-name">ak-tag</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-tag</span> <span class="hljs-attr">:closable</span>=<span class="hljs-string">&quot;true&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;warning&quot;</span>&gt;</span>标签三<span class="hljs-tag">&lt;/<span class="hljs-name">ak-tag</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-tag</span> <span class="hljs-attr">:closable</span>=<span class="hljs-string">&quot;true&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;danger&quot;</span>&gt;</span>标签3<span class="hljs-tag">&lt;/<span class="hljs-name">ak-tag</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n</span></code></pre></div>',1)],us=y("h3",{id:"动态编辑标签","data-source-line":"49"},[y("a",{class:"markdownIt-Anchor",href:"#动态编辑标签"},"#"),g(" 动态编辑标签")],-1),is=y("pre",{style:{display:"none"}},null,-1),js={class:"vuedoc-demo "},vs={class:"vuedoc-demo__inner"},ms={class:"vuedoc-demo__preview"},_s={ref:"vdpv_3Ref",class:"vuedoc-demo__sourceref"},fs=[w('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-tag</span>\n      <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(item, index) in list&quot;</span>\n      <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;item&quot;</span>\n      <span class="hljs-attr">:closable</span>=<span class="hljs-string">&quot;true&quot;</span>\n      @<span class="hljs-attr">close</span>=<span class="hljs-string">&quot;closeClick(index)&quot;</span>\n      &gt;</span>{{ item }}&lt;/ak-tag\n    &gt;\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;newTag&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;small&quot;</span> @<span class="hljs-attr">keyup.enter</span>=<span class="hljs-string">&quot;handleInputConfirm&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;ts&quot;</span> <span class="hljs-attr">setup</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n  <span class="hljs-keyword">const</span> list = ref([<span class="hljs-string">&#39;标签一&#39;</span>, <span class="hljs-string">&#39;标签二&#39;</span>, <span class="hljs-string">&#39;标签三&#39;</span>])\n  <span class="hljs-keyword">const</span> newTag = ref()\n  <span class="hljs-keyword">const</span> closeClick = <span class="hljs-function">(<span class="hljs-params">index: number</span>) =&gt;</span> {\n    list.value.splice(index, <span class="hljs-number">1</span>)\n  }\n  <span class="hljs-keyword">const</span> handleInputConfirm = <span class="hljs-function">() =&gt;</span> {\n    <span class="hljs-keyword">if</span> (newTag.value) {\n      list.value.push(newTag.value)\n      newTag.value = <span class="hljs-string">&#39;&#39;</span>\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n</span></code></pre></div>',1)],ks=w('<h2 id="api" data-source-line="81"><a class="markdownIt-Anchor" href="#api">#</a> API</h2><h3 id="tag-props" data-source-line="83"><a class="markdownIt-Anchor" href="#tag-props">#</a> Tag Props</h3><table data-source-line="85"><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>type</td><td>string</td><td>类型，success/default/warning/danger</td></tr><tr><td>closable</td><td>boolean/false</td><td>是否可关闭</td></tr><tr><td>color</td><td>string</td><td>字体颜色</td></tr><tr><td>bgColor</td><td>string</td><td>背景色</td></tr><tr><td>borderColor</td><td>string</td><td>边框颜色</td></tr><tr><td>size</td><td>string</td><td>尺寸，large / default/small / mini</td></tr></tbody></table>',3);$.render=function(s,a,n,l,t,e){const p=c("vdpv_0"),h=c("vdpv_1"),g=c("vdpv_2"),u=c("vdpv_3");return o(),d("div",G,[J,y("div",L,[y("div",M,[y("div",N,[r(p)]),y("div",{style:b({height:s.vdpv_0Height+"px"}),class:"vuedoc-demo__source"},[y("div",Q,W,512)],4),y("div",{class:"vuedoc-demo__footer",onClick:a[0]||(a[0]=a=>s.toggleCode(0))},_(s.vdpv_0Height>0?"hidden":"show"),1)])]),X,Y,Z,y("div",ss,[y("div",as,[y("div",ns,[r(h)]),y("div",{style:b({height:s.vdpv_1Height+"px"}),class:"vuedoc-demo__source"},[y("div",ls,ts,512)],4),y("div",{class:"vuedoc-demo__footer",onClick:a[1]||(a[1]=a=>s.toggleCode(1))},_(s.vdpv_1Height>0?"hidden":"show"),1)])]),es,ps,cs,y("div",os,[y("div",ds,[y("div",rs,[r(g)]),y("div",{style:b({height:s.vdpv_2Height+"px"}),class:"vuedoc-demo__source"},[y("div",hs,gs,512)],4),y("div",{class:"vuedoc-demo__footer",onClick:a[2]||(a[2]=a=>s.toggleCode(2))},_(s.vdpv_2Height>0?"hidden":"show"),1)])]),us,is,y("div",js,[y("div",vs,[y("div",ms,[r(u)]),y("div",{style:b({height:s.vdpv_3Height+"px"}),class:"vuedoc-demo__source"},[y("div",_s,fs,512)],4),y("div",{class:"vuedoc-demo__footer",onClick:a[3]||(a[3]=a=>s.toggleCode(3))},_(s.vdpv_3Height>0?"hidden":"show"),1)])]),ks])};export{$ as default};
