var s=Object.defineProperty,a=Object.defineProperties,n=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,t=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,c=(a,n,l)=>n in a?s(a,n,{enumerable:!0,configurable:!0,writable:!0,value:l}):a[n]=l;import{r as e,W as r,o,c as d,b as h,H as i,i as j,F as g,f as u,d as m,D as v,G as w,a as y,e as _,q as f,t as z,U as P}from"./vendor.66660a0e.js";const k={setup:()=>({defaultLazy:e("https://337547038.github.io/static/img/lazy1.jpg")})},q={class:"lazy-demo"},U=j(" 或者 "),b={"data-src":"http://www.33lc.com/article/UploadPic/2012-8/2012831462935573.jpg"},x=h("p",null,"图片不存在时",-1),L={"data-src":"lazy1.jpg"};k.render=function(s,a,n,l,t,p){const c=r("lazy");return o(),d("div",q,[h("p",null,[i(h("img",null,null,512),[[c,l.defaultLazy]])]),U,h("p",null,[i(h("img",b,null,512),[[c]])]),x,h("p",null,[i(h("img",L,null,512),[[c]])])])};const H={setup:()=>({src:"default.jpg"})},I={class:"lazy-demo"},A=["src"];H.render=function(s,a,n,l,t,p){const c=r("lazy");return o(),d("div",I,[h("p",null,[i(h("img",{"data-src":"http://www.33lc.com/article/UploadPic/2012-8/2012831462935573.jpg","data-error":"error.jpg",src:l.src},null,8,A),[[c]])])])};const O={setup:()=>({imgList:["http://www.33lc.com/article/UploadPic/2012-8/2012831493534705.jpg","http://www.33lc.com/article/UploadPic/2012-8/2012831495398936.jpg","http://www.33lc.com/article/UploadPic/2012-8/2012831411282914.jpg","http://www.33lc.com/article/UploadPic/2012-8/2012831411736193.jpg","http://www.33lc.com/article/UploadPic/2012-8/20128314114848605.jpg","http://www.33lc.com/article/UploadPic/2012-8/2012831412430262.jpg","http://www.33lc.com/article/UploadPic/2012-8/2012831413277067.jpg","http://www.33lc.com/article/UploadPic/2012-8/2012831413873333.jpg","http://www.33lc.com/article/UploadPic/2012-8/20128314135357731.jpg"]})},C={id:"container",style:{height:"300px","overflow-y":"auto"},class:"lazy-demo"},R={style:{"min-height":"310px"}};O.render=function(s,a,n,l,t,p){const c=r("lazy");return o(),d("div",C,[(o(!0),d(g,null,u(l.imgList,(s=>(o(),d("p",R,[i(h("img",null,null,512),[[c,s,"container"]])])))),256))])};const S=m({components:{vdpv_0:k,vdpv_1:H,vdpv_2:O},setup(s){const r=e(),o=e(),d=e(),h=[r,o,d],i=v({vdpv_0Height:0,vdpv_1Height:0,vdpv_2Height:0});return j=((s,a)=>{for(var n in a||(a={}))t.call(a,n)&&c(s,n,a[n]);if(l)for(var n of l(a))p.call(a,n)&&c(s,n,a[n]);return s})({toggleCode:s=>{const a="vdpv_"+s;0===i[a+"Height"]?i[a+"Height"]=(h[s].value?h[s].value.offsetHeight:0)||0:i[a+"Height"]=0}},w(i)),a(j,n({vdpv_0Ref:r,vdpv_1Ref:o,vdpv_2Ref:d}));var j}});S.$vd={matter:{},toc:[{content:"Lazy 图片懒加载（指令）",anchor:"lazy-图片懒加载指令",level:1},{content:"基本用法",anchor:"基本用法",level:3},{content:"自定默认和错误时的图片",anchor:"自定默认和错误时的图片",level:3},{content:"在指定容器中滚动",anchor:"在指定容器中滚动",level:3},{content:"API",anchor:"api",level:2},{content:"全局设置",anchor:"全局设置",level:3},{content:"Lazy Props",anchor:"lazy-props",level:3}]};const D=S,E={class:"vuedoc  "},F=P('<h1 id="lazy-图片懒加载指令" data-source-line="3"><a class="markdownIt-Anchor" href="#lazy-图片懒加载指令">#</a> Lazy 图片懒加载（指令）</h1><h3 id="基本用法" data-source-line="5"><a class="markdownIt-Anchor" href="#基本用法">#</a> 基本用法</h3><p data-source-line="7">图片的<code>src</code>可通过<code>v-lazy=&#39;src&#39;</code>或<code>data-src=&#39;src&#39;</code>两种方式传入</p><pre style="display:none;"></pre>',4),G={class:"vuedoc-demo "},V={class:"vuedoc-demo__inner"},W={class:"vuedoc-demo__preview"},$={ref:"vdpv_0Ref",class:"vuedoc-demo__sourceref"},B=[P('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml">\n<span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;lazy-demo&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">v-lazy</span>=<span class="hljs-string">&quot;defaultLazy&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    或者\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">data-src</span>=<span class="hljs-string">&quot;http://www.33lc.com/article/UploadPic/2012-8/2012831462935573.jpg&quot;</span> <span class="hljs-attr">v-lazy</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>图片不存在时<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">data-src</span>=<span class="hljs-string">&quot;lazy1.jpg&quot;</span> <span class="hljs-attr">v-lazy</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> {ref} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> defaultLazy = ref(<span class="hljs-string">&#39;https://337547038.github.io/static/img/lazy1.jpg&#39;</span>)\n    <span class="hljs-keyword">return</span> {\n      defaultLazy\n    }\n  }\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n</span></code></pre></div>',1)],J=h("h3",{id:"自定默认和错误时的图片","data-source-line":"36"},[h("a",{class:"markdownIt-Anchor",href:"#自定默认和错误时的图片"},"#"),j(" 自定默认和错误时的图片")],-1),K=h("p",{"data-source-line":"38"},[h("code",null,"data-src"),j("图片真实地址，"),h("code",null,"data-error"),j("加载错误显示的图片地址,"),h("code",null,"src"),j("默认初始显示图片地址")],-1),M=h("pre",{style:{display:"none"}},null,-1),N={class:"vuedoc-demo "},Q={class:"vuedoc-demo__inner"},T={class:"vuedoc-demo__preview"},X={ref:"vdpv_1Ref",class:"vuedoc-demo__sourceref"},Y=[P('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml">\n<span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;lazy-demo&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span>\n      <span class="hljs-attr">data-src</span>=<span class="hljs-string">&quot;http://www.33lc.com/article/UploadPic/2012-8/2012831462935573.jpg&quot;</span>\n      <span class="hljs-attr">data-error</span>=<span class="hljs-string">&quot;error.jpg&quot;</span>\n      <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;src&quot;</span> <span class="hljs-attr">v-lazy</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> src = <span class="hljs-string">&#39;default.jpg&#39;</span>\n    <span class="hljs-keyword">return</span> {\n      src\n    }\n  }\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</span></code></pre></div>',1)],Z=h("h3",{id:"在指定容器中滚动","data-source-line":"62"},[h("a",{class:"markdownIt-Anchor",href:"#在指定容器中滚动"},"#"),j(" 在指定容器中滚动")],-1),ss=h("p",{"data-source-line":"64"},[j("指令后面指定容器"),h("code",null,"id"),j(),h("code",null,"v-lazy:container='src''")],-1),as=h("pre",{style:{display:"none"}},null,-1),ns={class:"vuedoc-demo "},ls={class:"vuedoc-demo__inner"},ts={class:"vuedoc-demo__preview"},ps={ref:"vdpv_2Ref",class:"vuedoc-demo__sourceref"},cs=[P('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml">\n<span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;container&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;height: 300px;overflow-y: auto&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;lazy-demo&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;item in imgList&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;min-height: 310px;&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">v-lazy:container</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> {ref} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> imgList = [\n      <span class="hljs-string">&#39;http://www.33lc.com/article/UploadPic/2012-8/2012831493534705.jpg&#39;</span>,\n      <span class="hljs-string">&#39;http://www.33lc.com/article/UploadPic/2012-8/2012831495398936.jpg&#39;</span>,\n      <span class="hljs-string">&#39;http://www.33lc.com/article/UploadPic/2012-8/2012831411282914.jpg&#39;</span>,\n      <span class="hljs-string">&#39;http://www.33lc.com/article/UploadPic/2012-8/2012831411736193.jpg&#39;</span>,\n      <span class="hljs-string">&#39;http://www.33lc.com/article/UploadPic/2012-8/20128314114848605.jpg&#39;</span>,\n      <span class="hljs-string">&#39;http://www.33lc.com/article/UploadPic/2012-8/2012831412430262.jpg&#39;</span>,\n      <span class="hljs-string">&#39;http://www.33lc.com/article/UploadPic/2012-8/2012831413277067.jpg&#39;</span>,\n      <span class="hljs-string">&#39;http://www.33lc.com/article/UploadPic/2012-8/2012831413873333.jpg&#39;</span>,\n      <span class="hljs-string">&#39;http://www.33lc.com/article/UploadPic/2012-8/20128314135357731.jpg&#39;</span>\n    ]\n    <span class="hljs-keyword">return</span> {\n      imgList\n    }\n  }\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</span></code></pre></div>',1)],es=P('<h2 id="api" data-source-line="99"><a class="markdownIt-Anchor" href="#api">#</a> API</h2><h3 id="全局设置" data-source-line="101"><a class="markdownIt-Anchor" href="#全局设置">#</a> 全局设置</h3><pre style="display:none;"></pre><pre class="hljs vuedoc__hljs language-javascript hljs--one-dark"><code>Vue.use(Lazy, {\n  <span class="hljs-attr">loading</span>: <span class="hljs-string">&#39;/static/img/lazy-default.gif&#39;</span>, <span class="hljs-comment">// 初始默认显示的图片</span>\n  <span class="hljs-attr">error</span>: <span class="hljs-string">&#39;/static/img/lazy-error.png&#39;</span>, <span class="hljs-comment">// 加载错误时显示的图片</span>\n  <span class="hljs-attr">fadeIn</span>: <span class="hljs-literal">true</span>, <span class="hljs-comment">// 加载完成时图片淡入</span>\n  <span class="hljs-attr">threshold</span>: <span class="hljs-number">0</span> <span class="hljs-comment">// 图片离可视区域的距离。负值表示提前进入，正值表示延迟进入</span>\n})\n</code></pre><h3 id="lazy-props" data-source-line="112"><a class="markdownIt-Anchor" href="#lazy-props">#</a> Lazy Props</h3><table data-source-line="114"><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>v-lazy</td><td>String</td><td>图片真实地址，也可使用<code>data-src</code></td></tr><tr><td>src</td><td>String</td><td>初始默认显示的图片，一般不需要单独设置</td></tr><tr><td>data-error</td><td>String</td><td>加载错误时显示的图片，一般不需要单独设置</td></tr><tr><td>data-src</td><td>String</td><td>图片真实地址</td></tr></tbody></table>',6);D.render=function(s,a,n,l,t,p){const c=y("vdpv_0"),e=y("vdpv_1"),r=y("vdpv_2");return o(),d("div",E,[F,h("div",G,[h("div",V,[h("div",W,[_(c)]),h("div",{style:f({height:s.vdpv_0Height+"px"}),class:"vuedoc-demo__source"},[h("div",$,B,512)],4),h("div",{class:"vuedoc-demo__footer",onClick:a[0]||(a[0]=a=>s.toggleCode(0))},z(s.vdpv_0Height>0?"hidden":"show"),1)])]),J,K,M,h("div",N,[h("div",Q,[h("div",T,[_(e)]),h("div",{style:f({height:s.vdpv_1Height+"px"}),class:"vuedoc-demo__source"},[h("div",X,Y,512)],4),h("div",{class:"vuedoc-demo__footer",onClick:a[1]||(a[1]=a=>s.toggleCode(1))},z(s.vdpv_1Height>0?"hidden":"show"),1)])]),Z,ss,as,h("div",ns,[h("div",ls,[h("div",ts,[_(r)]),h("div",{style:f({height:s.vdpv_2Height+"px"}),class:"vuedoc-demo__source"},[h("div",ps,cs,512)],4),h("div",{class:"vuedoc-demo__footer",onClick:a[2]||(a[2]=a=>s.toggleCode(2))},z(s.vdpv_2Height>0?"hidden":"show"),1)])]),es])};export{D as default};
