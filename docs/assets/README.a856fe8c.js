var s=Object.defineProperty,a=Object.defineProperties,n=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,e=Object.prototype.propertyIsEnumerable,t=(a,n,l)=>n in a?s(a,n,{enumerable:!0,configurable:!0,writable:!0,value:l}):a[n]=l;import{y as c,o as r,c as o,b as h,i as j,O as g,d,r as i,D as u,G as v,a as m,e as _,q as f,t as k,U as y}from"./vendor.66660a0e.js";const O={setup(){const s=c("Message");return{alertOpen:a=>{s.alert("这是alert的内容",{icon:a})}}}},q=j("模拟Alert 成功 "),w=j("模拟Alert 失败 "),C=j("模拟Alert 警告 ");O.render=function(s,a,n,l,p,e){return r(),o("div",null,[h("p",null,[q,h("span",{class:"green",onClick:a[0]||(a[0]=s=>l.alertOpen(1))},"试一试")]),h("p",null,[w,h("span",{class:"green",onClick:a[1]||(a[1]=s=>l.alertOpen(2))},"试一试")]),h("p",null,[C,h("span",{class:"green",onClick:a[2]||(a[2]=s=>l.alertOpen(3))},"试一试")])])};const b={setup(){const s=g();return{alertOpen:()=>{s.proxy.$alert("这是alert的内容",{icon:2,callback:s=>{alert("确认回调事件"),s()}})}}}},A=j("模拟Confirm ");b.render=function(s,a,n,l,p,e){return r(),o("div",null,[h("p",null,[A,h("span",{class:"green",onClick:a[0]||(a[0]=(...s)=>l.alertOpen&&l.alertOpen(...s))},"试一试")])])};const x={data:()=>({}),methods:{alertOpen(s){this.$msg("删除成功",{icon:s})}}},H=j("消息提示 成功 "),I=j("消息提示 失败 "),M=j("消息提示 提示 "),P=j("消息提示 警告 ");x.render=function(s,a,n,l,p,e){return r(),o("div",null,[h("p",null,[H,h("span",{class:"green",onClick:a[0]||(a[0]=s=>e.alertOpen(1))},"试一试")]),h("p",null,[I,h("span",{class:"green",onClick:a[1]||(a[1]=s=>e.alertOpen(2))},"试一试")]),h("p",null,[M,h("span",{class:"green",onClick:a[2]||(a[2]=s=>e.alertOpen(3))},"试一试")]),h("p",null,[P,h("span",{class:"green",onClick:a[3]||(a[3]=s=>e.alertOpen(4))},"试一试")])])};const R=d({components:{vdpv_0:O,vdpv_1:b,vdpv_2:x},setup(s){const c=i(),r=i(),o=i(),h=[c,r,o],j=u({vdpv_0Height:0,vdpv_1Height:0,vdpv_2Height:0});return g=((s,a)=>{for(var n in a||(a={}))p.call(a,n)&&t(s,n,a[n]);if(l)for(var n of l(a))e.call(a,n)&&t(s,n,a[n]);return s})({toggleCode:s=>{const a="vdpv_"+s;0===j[a+"Height"]?j[a+"Height"]=(h[s].value?h[s].value.offsetHeight:0)||0:j[a+"Height"]=0}},v(j)),a(g,n({vdpv_0Ref:c,vdpv_1Ref:r,vdpv_2Ref:o}));var g}});R.$vd={matter:{},toc:[{content:"Message 信息弹窗",anchor:"message-信息弹窗",level:1},{content:"Alert",anchor:"alert",level:3},{content:"Confirm",anchor:"confirm",level:3},{content:"Msg",anchor:"msg",level:3},{content:"API",anchor:"api",level:2}]};const $=R,D={class:"vuedoc  "},E=y('<h1 id="message-信息弹窗" data-source-line="3"><a class="markdownIt-Anchor" href="#message-信息弹窗">#</a> Message 信息弹窗</h1><p data-source-line="5">为方便使用，定义了<code>Alert</code>,<code>Confirm</code>,<code>Msg</code>三种以适应不同场景，如果需要弹出较为复杂的内容，请使用 <code>Dialog</code>。</p><h3 id="alert" data-source-line="7"><a class="markdownIt-Anchor" href="#alert">#</a> Alert</h3><p data-source-line="9">使用<code>inject</code>注入方式调用</p><pre style="display:none;"></pre>',5),G={class:"vuedoc-demo "},S={class:"vuedoc-demo__inner"},U={class:"vuedoc-demo__preview"},V={ref:"vdpv_0Ref",class:"vuedoc-demo__sourceref"},z=[y('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml">\n<span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>模拟Alert 成功 <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;green&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;alertOpen(1)&quot;</span>&gt;</span>试一试<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>模拟Alert 失败 <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;green&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;alertOpen(2)&quot;</span>&gt;</span>试一试<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>模拟Alert 警告 <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;green&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;alertOpen(3)&quot;</span>&gt;</span>试一试<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> {inject} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> message = inject(<span class="hljs-string">&#39;Message&#39;</span>)\n    <span class="hljs-keyword">const</span> alertOpen = <span class="hljs-function"><span class="hljs-params">type</span> =&gt;</span> {\n      message.alert(<span class="hljs-string">&#39;这是alert的内容&#39;</span>, {<span class="hljs-attr">icon</span>: type})\n    }\n    <span class="hljs-keyword">return</span> {\n      alertOpen\n    }\n  }\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n</span></code></pre></div>',1)],B=h("h3",{id:"confirm","data-source-line":"38"},[h("a",{class:"markdownIt-Anchor",href:"#confirm"},"#"),j(" Confirm")],-1),F=h("p",{"data-source-line":"40"},[j("使用"),h("code",null,"getCurrentInstance"),j("方式打开")],-1),J=h("pre",{style:{display:"none"}},null,-1),K={class:"vuedoc-demo "},L={class:"vuedoc-demo__inner"},N={class:"vuedoc-demo__preview"},Q={ref:"vdpv_1Ref",class:"vuedoc-demo__sourceref"},T=[y('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml">\n<span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>模拟Confirm <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;green&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;alertOpen&quot;</span>&gt;</span>试一试<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> {getCurrentInstance} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> instance = getCurrentInstance()\n    <span class="hljs-keyword">const</span> alertOpen = <span class="hljs-function">() =&gt;</span> {\n      instance.proxy.$alert(<span class="hljs-string">&#39;这是alert的内容&#39;</span>, {\n        <span class="hljs-attr">icon</span>: <span class="hljs-number">2</span>, <span class="hljs-attr">callback</span>: <span class="hljs-function"><span class="hljs-params">close</span> =&gt;</span> {\n          alert(<span class="hljs-string">&#39;确认回调事件&#39;</span>)\n          close()\n        }\n      })\n    }\n    <span class="hljs-keyword">return</span> {\n      alertOpen\n    }\n  }\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n</span></code></pre></div>',1)],W=h("h3",{id:"msg","data-source-line":"72"},[h("a",{class:"markdownIt-Anchor",href:"#msg"},"#"),j(" Msg")],-1),X=h("p",{"data-source-line":"74"},[h("code",null,"Vue2"),j("选项卡的方式，使用"),h("code",null,"this.$msg()"),j("打开")],-1),Y=h("pre",{style:{display:"none"}},null,-1),Z={class:"vuedoc-demo "},ss={class:"vuedoc-demo__inner"},as={class:"vuedoc-demo__preview"},ns={ref:"vdpv_2Ref",class:"vuedoc-demo__sourceref"},ls=[y('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml">\n<span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>消息提示 成功 <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;green&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;alertOpen(1)&quot;</span>&gt;</span>试一试<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>消息提示 失败 <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;green&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;alertOpen(2)&quot;</span>&gt;</span>试一试<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>消息提示 提示 <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;green&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;alertOpen(3)&quot;</span>&gt;</span>试一试<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>消息提示 警告 <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;green&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;alertOpen(4)&quot;</span>&gt;</span>试一试<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">return</span> {}\n  },\n  <span class="hljs-attr">methods</span>: {\n    <span class="hljs-function"><span class="hljs-title">alertOpen</span>(<span class="hljs-params">type</span>)</span> {\n      <span class="hljs-built_in">this</span>.$msg(<span class="hljs-string">&#39;删除成功&#39;</span>, {\n        <span class="hljs-attr">icon</span>: type\n      })\n    }\n  }\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n</span></code></pre></div>',1)],ps=h("h2",{id:"api","data-source-line":"104"},[h("a",{class:"markdownIt-Anchor",href:"#api"},"#"),j(" API")],-1),es=h("p",{"data-source-line":"106"},[j("所有参数详见"),h("a",{href:"/#/dialog"},"Dialog")],-1);$.render=function(s,a,n,l,p,e){const t=m("vdpv_0"),c=m("vdpv_1"),j=m("vdpv_2");return r(),o("div",D,[E,h("div",G,[h("div",S,[h("div",U,[_(t)]),h("div",{style:f({height:s.vdpv_0Height+"px"}),class:"vuedoc-demo__source"},[h("div",V,z,512)],4),h("div",{class:"vuedoc-demo__footer",onClick:a[0]||(a[0]=a=>s.toggleCode(0))},k(s.vdpv_0Height>0?"hidden":"show"),1)])]),B,F,J,h("div",K,[h("div",L,[h("div",N,[_(c)]),h("div",{style:f({height:s.vdpv_1Height+"px"}),class:"vuedoc-demo__source"},[h("div",Q,T,512)],4),h("div",{class:"vuedoc-demo__footer",onClick:a[1]||(a[1]=a=>s.toggleCode(1))},k(s.vdpv_1Height>0?"hidden":"show"),1)])]),W,X,Y,h("div",Z,[h("div",ss,[h("div",as,[_(j)]),h("div",{style:f({height:s.vdpv_2Height+"px"}),class:"vuedoc-demo__source"},[h("div",ns,ls,512)],4),h("div",{class:"vuedoc-demo__footer",onClick:a[2]||(a[2]=a=>s.toggleCode(2))},k(s.vdpv_2Height>0?"hidden":"show"),1)])]),ps,es])};export{$ as default};
