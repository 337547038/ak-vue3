import{d as q,a as p,o as d,c as i,g as s,F as y,l as H,t as _,b as l,_ as w,w as x,f as v,r as j,n as u,h as I,i as b,j as h}from"./index-6c3c2d70.js";const C={class:"image-demo"},A=s("div",null,[s("p",null,"fill:默认，不保证保持原有的比例，内容拉伸填充整个内容容器"),s("p",null,"contain:保持原有尺寸比例。内容被缩放"),s("p",null,"cover:保持原有尺寸比例。但部分内容可能被剪切"),s("p",null,"none:保留原有元素内容的长度和宽度，也就是说内容不会被重置"),s("p",null,"scale-down:保持原有尺寸比例。内容的尺寸与 none 或 contain 中的一个相同，取决于它们两个之间谁得到的对象尺寸会更小一些")],-1),R="./image/img2.png",S=q({__name:"README.md.vdpv_0",setup(a){const n=["fill","contain","cover","none","scale-down"];return(t,r)=>{const c=p("ak-image");return d(),i(y,null,[s("div",C,[(d(),i(y,null,H(n,e=>s("div",{key:e,class:"list"},[s("span",null,_(e),1),l(c,{style:{width:"100px",height:"100px"},src:R,fit:e},null,8,["fit"])])),64))]),A],64)}}}),E={},L={class:"image-demo"};function D(a,n){const t=p("ak-image");return d(),i("div",L,[l(t,{style:{width:"100px",height:"100px"},src:"./image/img2.png",border:"",fit:"contain"}),l(t,{style:{width:"100px",height:"100px"},src:"./image/img2.png",radius:"50%"})])}const N=w(E,[["render",D]]),P={},V={class:"image-demo"};function z(a,n){const t=p("ak-image");return d(),i("div",V,[l(t,{style:{width:"100px",height:"100px"},src:"./image/img2.png"},{placeholder:x(()=>[v(" 加载中... ")]),_:1}),l(t,{style:{width:"100px",height:"100px"},src:"./image/img20.png"},{error:x(()=>[v(" 自定义加载失败 ")]),_:1}),l(t,{style:{width:"100px",height:"100px"},src:"./image/img20.png"})])}const B=w(P,[["render",z]]),M={class:"image-demo"},F=q({__name:"README.md.vdpv_3",setup(a){const n=j("./image/img2.png"),t=["./image/img1.png","./image/img2.png"];return(r,c)=>{const e=p("ak-image");return d(),i("div",M,[l(e,{src:n.value,class:"cls",style:{width:"100px",height:"100px"},previewSrcList:t},null,8,["src"])])}}}),$=q({components:{vdpv_0:S,vdpv_1:N,vdpv_2:B,vdpv_3:F},setup(a){const n=j(),t=j(),r=j(),c=j(),e=[n,t,r,c],o=I({vdpv_0Height:0,vdpv_1Height:0,vdpv_2Height:0,vdpv_3Height:0});return{toggleCode:g=>{const m="vdpv_"+g;o[m+"Height"]===0?o[m+"Height"]=(e[g].value?e[g].value.offsetHeight:0)||0:o[m+"Height"]=0},...b(o),vdpv_0Ref:n,vdpv_1Ref:t,vdpv_2Ref:r,vdpv_3Ref:c}}});$.$vd={matter:{},toc:[{content:"Image 图片",anchor:"image-图片",level:1},{content:"基本使用",anchor:"基本使用",level:3},{content:"设置边框圆角",anchor:"设置边框圆角",level:3},{content:"占位符，加载状态，加载异常",anchor:"占位符加载状态加载异常",level:3},{content:"预览",anchor:"预览",level:3},{content:"API",anchor:"api",level:2},{content:"Image Props",anchor:"image-props",level:3},{content:"Image Slots",anchor:"image-slots",level:3}]};const T=$,G={class:"vuedoc"},J=h('<h1 id="image-图片" data-source-line="1"><a class="markdownIt-Anchor" href="#image-图片">#</a> Image 图片</h1><h3 id="基本使用" data-source-line="3"><a class="markdownIt-Anchor" href="#基本使用">#</a> 基本使用</h3><p data-source-line="5">通过<code>fit</code>确定图片如何适应到容器框</p><pre style="display:none;"></pre>',4),K={class:"vuedoc-demo"},O={class:"vuedoc-demo__inner"},Q={class:"vuedoc-demo__preview"},U={ref:"vdpv_0Ref",class:"vuedoc-demo__sourceref"},W=h(`<div class="vuedoc__code"><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;image-demo&quot;</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;fit in fits&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;fit&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;list&quot;</span>&gt;</span>
      <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>{{ fit }}<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>
      <span class="hljs-tag">&lt;<span class="hljs-name">ak-image</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 100px; height: 100px&quot;</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;url&quot;</span> <span class="hljs-attr">:fit</span>=<span class="hljs-string">&quot;fit&quot;</span> /&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>fill:默认，不保证保持原有的比例，内容拉伸填充整个内容容器<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>contain:保持原有尺寸比例。内容被缩放<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>cover:保持原有尺寸比例。但部分内容可能被剪切<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>none:保留原有元素内容的长度和宽度，也就是说内容不会被重置<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>scale-down:保持原有尺寸比例。内容的尺寸与 none 或 contain 中的一个相同，取决于它们两个之间谁得到的对象尺寸会更小一些<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">setup</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;ts&quot;</span>&gt;</span><span class="javascript">
  <span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>
  <span class="hljs-keyword">const</span> fits = [<span class="hljs-string">&#39;fill&#39;</span>, <span class="hljs-string">&#39;contain&#39;</span>, <span class="hljs-string">&#39;cover&#39;</span>, <span class="hljs-string">&#39;none&#39;</span>, <span class="hljs-string">&#39;scale-down&#39;</span>]
  <span class="hljs-keyword">const</span> url = <span class="hljs-string">&#39;./image/img2.png&#39;</span>
</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>

</span></code></pre></div>`,1),X=[W],Y=s("h3",{id:"设置边框圆角","data-source-line":"31"},[s("a",{class:"markdownIt-Anchor",href:"#设置边框圆角"},"#"),v(" 设置边框圆角")],-1),Z=s("pre",{style:{display:"none"}},null,-1),ss={class:"vuedoc-demo"},as={class:"vuedoc-demo__inner"},ns={class:"vuedoc-demo__preview"},ts={ref:"vdpv_1Ref",class:"vuedoc-demo__sourceref"},ls=h(`<div class="vuedoc__code"><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;image-demo&quot;</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">ak-image</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 100px; height: 100px&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./image/img2.png&quot;</span> <span class="hljs-attr">border</span> <span class="hljs-attr">fit</span>=<span class="hljs-string">&quot;contain&quot;</span>/&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">ak-image</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 100px; height: 100px&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./image/img2.png&quot;</span> <span class="hljs-attr">radius</span>=<span class="hljs-string">&quot;50%&quot;</span>/&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>

</span></code></pre></div>`,1),es=[ls],ps=s("h3",{id:"占位符加载状态加载异常","data-source-line":"43"},[s("a",{class:"markdownIt-Anchor",href:"#占位符加载状态加载异常"},"#"),v(" 占位符，加载状态，加载异常")],-1),cs=s("pre",{style:{display:"none"}},null,-1),os={class:"vuedoc-demo"},ds={class:"vuedoc-demo__inner"},is={class:"vuedoc-demo__preview"},hs={ref:"vdpv_2Ref",class:"vuedoc-demo__sourceref"},rs=h(`<div class="vuedoc__code"><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;image-demo&quot;</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">ak-image</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 100px; height: 100px&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./image/img2.png&quot;</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">placeholder</span>&gt;</span>
      加载中...
    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-name">ak-image</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">ak-image</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 100px; height: 100px&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./image/img20.png&quot;</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">error</span>&gt;</span>
      自定义加载失败
    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-name">ak-image</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">ak-image</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 100px; height: 100px&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./image/img20.png&quot;</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-name">ak-image</span>&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>

</span></code></pre></div>`,1),gs=[rs],ms=s("h3",{id:"预览","data-source-line":"65"},[s("a",{class:"markdownIt-Anchor",href:"#预览"},"#"),v(" 预览")],-1),_s=s("pre",{style:{display:"none"}},null,-1),js={class:"vuedoc-demo"},vs={class:"vuedoc-demo__inner"},us={class:"vuedoc-demo__preview"},fs={ref:"vdpv_3Ref",class:"vuedoc-demo__sourceref"},qs=h(`<div class="vuedoc__code"><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;image-demo&quot;</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">ak-image</span>
      <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;url&quot;</span>
      <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;cls&quot;</span>
      <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 100px; height: 100px&quot;</span>
      <span class="hljs-attr">:previewSrcList</span>=<span class="hljs-string">&quot;previewSrcList&quot;</span>
    /&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">setup</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;ts&quot;</span>&gt;</span><span class="javascript">
  <span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>
  <span class="hljs-keyword">const</span> url = ref(<span class="hljs-string">&#39;./image/img2.png&#39;</span>)
  <span class="hljs-keyword">const</span> previewSrcList = [<span class="hljs-string">&#39;./image/img1.png&#39;</span>, <span class="hljs-string">&#39;./image/img2.png&#39;</span>]
</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>

</span></code></pre></div>`,1),ws=[qs],ks=h('<h2 id="api" data-source-line="86"><a class="markdownIt-Anchor" href="#api">#</a> API</h2><h3 id="image-props" data-source-line="88"><a class="markdownIt-Anchor" href="#image-props">#</a> Image Props</h3><table data-source-line="90"><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>src</td><td>string</td><td>图片源地址，同原生属性一致</td></tr><tr><td>fit</td><td>string</td><td>图片如何适应容器框，同原生 object-fit，可选<code>&#39;fill&#39;｜&#39;contain&#39;｜&#39;cover&#39;｜&#39;none&#39;｜&#39;scale-down&#39;</code></td></tr><tr><td>alt</td><td>string</td><td>原生alt属性</td></tr><tr><td>preview-src-list</td><td>string[]</td><td>开启图片预览功能</td></tr><tr><td>z-index</td><td>number</td><td>设置图片预览的 z-index</td></tr><tr><td>previewCls</td><td>string</td><td>图片预览窗口类名</td></tr><tr><td>border</td><td>boolean</td><td>显示边框</td></tr><tr><td>radius</td><td>string</td><td>圆角</td></tr></tbody></table><h3 id="image-slots" data-source-line="101"><a class="markdownIt-Anchor" href="#image-slots">#</a> Image Slots</h3><table data-source-line="103"><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>error</td><td>加载失败内容</td></tr><tr><td>placeholder</td><td>自定义占位内容</td></tr></tbody></table>',5);function ys(a,n,t,r,c,e){const o=p("vdpv_0"),k=p("vdpv_1"),g=p("vdpv_2"),m=p("vdpv_3");return d(),i("div",G,[J,s("div",K,[s("div",O,[s("div",Q,[l(o)]),s("div",{style:u({height:a.vdpv_0Height+"px"}),class:"vuedoc-demo__source"},[s("div",U,X,512)],4),s("div",{class:"vuedoc-demo__footer",onClick:n[0]||(n[0]=f=>a.toggleCode(0))},_(a.vdpv_0Height>0?"hidden":"show"),1)])]),Y,Z,s("div",ss,[s("div",as,[s("div",ns,[l(k)]),s("div",{style:u({height:a.vdpv_1Height+"px"}),class:"vuedoc-demo__source"},[s("div",ts,es,512)],4),s("div",{class:"vuedoc-demo__footer",onClick:n[1]||(n[1]=f=>a.toggleCode(1))},_(a.vdpv_1Height>0?"hidden":"show"),1)])]),ps,cs,s("div",os,[s("div",ds,[s("div",is,[l(g)]),s("div",{style:u({height:a.vdpv_2Height+"px"}),class:"vuedoc-demo__source"},[s("div",hs,gs,512)],4),s("div",{class:"vuedoc-demo__footer",onClick:n[2]||(n[2]=f=>a.toggleCode(2))},_(a.vdpv_2Height>0?"hidden":"show"),1)])]),ms,_s,s("div",js,[s("div",vs,[s("div",us,[l(m)]),s("div",{style:u({height:a.vdpv_3Height+"px"}),class:"vuedoc-demo__source"},[s("div",fs,ws,512)],4),s("div",{class:"vuedoc-demo__footer",onClick:n[3]||(n[3]=f=>a.toggleCode(3))},_(a.vdpv_3Height>0?"hidden":"show"),1)])]),ks])}const $s=w(T,[["render",ys]]);export{$s as default};
