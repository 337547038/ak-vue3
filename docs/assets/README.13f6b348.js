var s=Object.defineProperty,a=Object.defineProperties,l=Object.getOwnPropertyDescriptors,n=Object.getOwnPropertySymbols,t=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,e=(a,l,n)=>l in a?s(a,l,{enumerable:!0,configurable:!0,writable:!0,value:n}):a[l]=n;import{r as c,a as o,o as d,c as h,b as i,e as r,w as g,i as j,F as u,d as v,D as m,G as f,q as _,t as b,U as k}from"./vendor.66660a0e.js";const q={setup:()=>({visible1:c(!1)})},y=j("使用参数visible显示隐藏 "),w=i("p",null,"窗口内容，可包含任何内容",-1),C=i("p",null,"就是样式丑了点点",-1),x=j("使用组件open方法打开 "),V=j("窗口内容，可包含任何内容");q.render=function(s,a,l,n,t,p){const e=o("ak-dialog");return d(),h("div",null,[i("p",null,[y,i("span",{onClick:a[0]||(a[0]=s=>n.visible1=!0),class:"green"},"试一试")]),r(e,{title:"title",modelValue:n.visible1,"onUpdate:modelValue":a[1]||(a[1]=s=>n.visible1=s)},{default:g((()=>[w,C])),_:1},8,["modelValue"]),i("p",null,[x,i("span",{onClick:a[2]||(a[2]=a=>s.$refs.openDialog.open()),class:"green"},"试一试")]),r(e,{title:"title",ref:"openDialog",class:"test-dialog"},{default:g((()=>[V])),_:1},512)])};const H={setup:()=>({visible:c(!1),visible1:c(!1)})},D=j("slot设置的标题 "),I=j("通过slot设标题"),R=i("p",null,"这是一个通过slot设标题的 dialog 弹窗，当然也可以是不设置标题",-1),A=i("p",null,"这是一个通过slot设标题的 dialog 弹窗",-1),U=i("p",null,"这是一个通过slot设标题的 dialog 弹窗",-1),O=i("p",null,"这是一个通过slot设标题的 dialog 弹窗",-1),P=j("没有标题的弹窗"),S=i("p",null,"这是一个通过slot设标题的 dialog 弹窗，当然也可以是不设置标题",-1),z=i("p",null,"这是一个通过slot设标题的 dialog 弹窗",-1),M=i("p",null,"这是一个通过slot设标题的 dialog 弹窗",-1),T=i("p",null,"这是一个通过slot设标题的 dialog 弹窗",-1);H.render=function(s,a,l,n,t,p){const e=o("ak-dialog");return d(),h("div",null,[i("p",null,[D,i("span",{onClick:a[0]||(a[0]=s=>n.visible=!0),class:"green"},"试一试")]),r(e,{modelValue:n.visible,"onUpdate:modelValue":a[1]||(a[1]=s=>n.visible=s)},{title:g((()=>[I])),default:g((()=>[R,A,U,O])),_:1},8,["modelValue"]),i("p",null,[P,i("span",{onClick:a[2]||(a[2]=s=>n.visible1=!0),class:"green"},"试一试")]),r(e,{modelValue:n.visible1,"onUpdate:modelValue":a[3]||(a[3]=s=>n.visible1=s)},{default:g((()=>[S,z,M,T])),_:1},8,["modelValue"])])};const $={setup:()=>({visible:c(!1)})},B=i("p",null,"设置了宽高的 dialog 弹窗，设定了高时，内容溢出将显示纵向滚动条",-1),E=i("p",{style:{height:"200px"}},null,-1),F=i("p",null,"设置了宽高的 dialog 弹窗，设定了高时，内容溢出将显示纵向滚动条",-1);$.render=function(s,a,l,n,t,p){const e=o("ak-dialog");return d(),h(u,null,[i("span",{onClick:a[0]||(a[0]=s=>n.visible=!0),class:"green"},"试一试"),r(e,{modelValue:n.visible,"onUpdate:modelValue":a[1]||(a[1]=s=>n.visible=s),title:"title",width:"400px",height:"200px"},{default:g((()=>[B,E,F])),_:1},8,["modelValue"])],64)};const G={setup:()=>({visible:c(!1),visible1:c(!1),visible2:c(!1),callback:s=>{alert("确认关闭"),s()},beforeClose:(s,a)=>{alert("你点击了"+s+"，可使用return true或使用close方法可关闭")}})},N=j("添加确认和取消按钮"),J=i("p",null,"这是按钮的 dialog 弹窗内容",-1),K=i("p",null,"默认情况下点击按钮后将关闭窗口",-1),L=j("绑定callback方法"),Q=i("p",null,"绑定callback方法后，点击确定不会关闭弹窗，可使用回调方法手动关闭",-1),W=j("绑定beforeClose方法"),X=i("p",null,"绑定callback方法后，点击确定不会关闭弹窗，可使用回调方法手动关闭",-1);G.render=function(s,a,l,n,t,p){const e=o("ak-dialog");return d(),h("div",null,[i("p",null,[N,i("span",{class:"green",onClick:a[0]||(a[0]=s=>n.visible=!0)},"试一试")]),r(e,{modelValue:n.visible,"onUpdate:modelValue":a[1]||(a[1]=s=>n.visible=s),title:"title",confirm:"confirm",cancel:"cancel"},{default:g((()=>[J,K])),_:1},8,["modelValue"]),i("p",null,[L,i("span",{class:"green",onClick:a[2]||(a[2]=s=>n.visible1=!0)},"试一试")]),r(e,{modelValue:n.visible1,"onUpdate:modelValue":a[3]||(a[3]=s=>n.visible1=s),title:"title",confirm:"confirm",cancel:"cancel",callback:n.callback},{default:g((()=>[Q])),_:1},8,["modelValue","callback"]),i("p",null,[W,i("span",{class:"green",onClick:a[4]||(a[4]=s=>n.visible2=!0)},"试一试")]),r(e,{modelValue:n.visible2,"onUpdate:modelValue":a[5]||(a[5]=s=>n.visible2=s),title:"title",confirm:"confirm",cancel:"cancel","before-close":n.beforeClose},{default:g((()=>[X])),_:1},8,["modelValue","before-close"])])};const Y={setup:()=>({visible:c(!1)})},Z=i("p",null,"这是的 dialog 弹窗内容",-1),ss=i("p",null,"这是一个会自动关闭的弹窗",-1);Y.render=function(s,a,l,n,t,p){const e=o("ak-dialog");return d(),h("div",null,[i("span",{class:"green",onClick:a[0]||(a[0]=s=>n.visible=!0)},"试一试"),r(e,{modelValue:n.visible,"onUpdate:modelValue":a[1]||(a[1]=s=>n.visible=s),title:"title","auto-close":10},{default:g((()=>[Z,ss])),_:1},8,["modelValue"])])};const as={setup:()=>({visible:c(!1),visible1:c(!1)})},ls=i("p",null,"这是的 dialog 弹窗内容",-1),ns=i("p",null," ",-1),ts=[i("a",{href:"javascript:;",class:"green"},"点击这里打开内层弹窗口",-1)],ps=i("p",null," ",-1),es=i("p",null,"这是的 dialog 弹窗内容",-1),cs=i("p",null,null,-1),os=j("内层弹窗");as.render=function(s,a,l,n,t,p){const e=o("ak-dialog");return d(),h("div",null,[i("span",{class:"green",onClick:a[0]||(a[0]=s=>n.visible=!0)},"试一试"),r(e,{modelValue:n.visible,"onUpdate:modelValue":a[2]||(a[2]=s=>n.visible=s),title:"title"},{default:g((()=>[ls,ns,i("p",{onClick:a[1]||(a[1]=s=>n.visible1=!0)},ts),ps,es,cs])),_:1},8,["modelValue"]),r(e,{modelValue:n.visible1,"onUpdate:modelValue":a[3]||(a[3]=s=>n.visible1=s),title:"title",width:"300px"},{default:g((()=>[os])),_:1},8,["modelValue"])])};const ds={setup:()=>({visible:c(!1)})},hs=i("p",null,"这是的 dialog 弹窗内容",-1),is=i("p",null,null,-1),rs=j("取消"),gs=j("确定"),js=j("提交");ds.render=function(s,a,l,n,t,p){const e=o("ak-button"),c=o("ak-dialog");return d(),h("div",null,[i("span",{class:"green",onClick:a[0]||(a[0]=s=>n.visible=!0)},"试一试"),r(c,{modelValue:n.visible,"onUpdate:modelValue":a[1]||(a[1]=s=>n.visible=s),title:"title"},{footer:g((()=>[r(e,null,{default:g((()=>[rs])),_:1}),r(e,{type:"primary"},{default:g((()=>[gs])),_:1}),r(e,{type:"primary"},{default:g((()=>[js])),_:1})])),default:g((()=>[hs,is])),_:1},8,["modelValue"])])};const us={setup:()=>({visible:c(!1)})},vs=i("p",null,"这是的 dialog 弹窗内容",-1),ms=i("p",null,"可通过点击标题栏移动窗口位置",-1);us.render=function(s,a,l,n,t,p){const e=o("ak-dialog");return d(),h("div",null,[i("span",{class:"green",onClick:a[0]||(a[0]=s=>n.visible=!0)},"试一试"),r(e,{modelValue:n.visible,"onUpdate:modelValue":a[1]||(a[1]=s=>n.visible=s),title:"title",move:!0},{default:g((()=>[vs,ms])),_:1},8,["modelValue"])])};const fs=v({components:{vdpv_0:q,vdpv_1:H,vdpv_2:$,vdpv_3:G,vdpv_4:Y,vdpv_5:as,vdpv_6:ds,vdpv_7:us},setup(s){const o=c(),d=c(),h=c(),i=c(),r=c(),g=c(),j=c(),u=c(),v=[o,d,h,i,r,g,j,u],_=m({vdpv_0Height:0,vdpv_1Height:0,vdpv_2Height:0,vdpv_3Height:0,vdpv_4Height:0,vdpv_5Height:0,vdpv_6Height:0,vdpv_7Height:0});return b=((s,a)=>{for(var l in a||(a={}))t.call(a,l)&&e(s,l,a[l]);if(n)for(var l of n(a))p.call(a,l)&&e(s,l,a[l]);return s})({toggleCode:s=>{const a="vdpv_"+s;0===_[a+"Height"]?_[a+"Height"]=(v[s].value?v[s].value.offsetHeight:0)||0:_[a+"Height"]=0}},f(_)),a(b,l({vdpv_0Ref:o,vdpv_1Ref:d,vdpv_2Ref:h,vdpv_3Ref:i,vdpv_4Ref:r,vdpv_5Ref:g,vdpv_6Ref:j,vdpv_7Ref:u}));var b}});fs.$vd={matter:{},toc:[{content:"Dialog 弹层对话框",anchor:"dialog-弹层对话框",level:1},{content:"基本用法",anchor:"基本用法",level:3},{content:"标题设置",anchor:"标题设置",level:3},{content:"设定窗宽高",anchor:"设定窗宽高",level:3},{content:"按钮事件",anchor:"按钮事件",level:3},{content:"自动关闭",anchor:"自动关闭",level:3},{content:"嵌套弹窗",anchor:"嵌套弹窗",level:3},{content:'使用slot="footer"自定按钮',anchor:"使用slotfooter自定按钮",level:3},{content:"可拖动",anchor:"可拖动",level:3},{content:"API",anchor:"api",level:2},{content:"Dialog",anchor:"dialog",level:3},{content:"Dialog Slot",anchor:"dialog-slot",level:3},{content:"Dialog Methods",anchor:"dialog-methods",level:3}]};const _s=fs,bs={class:"vuedoc  "},ks=k('<h1 id="dialog-弹层对话框" data-source-line="3"><a class="markdownIt-Anchor" href="#dialog-弹层对话框">#</a> Dialog 弹层对话框</h1><h3 id="基本用法" data-source-line="5"><a class="markdownIt-Anchor" href="#基本用法">#</a> 基本用法</h3><pre style="display:none;"></pre>',3),qs={class:"vuedoc-demo "},ys={class:"vuedoc-demo__inner"},ws={class:"vuedoc-demo__preview"},Cs={ref:"vdpv_0Ref",class:"vuedoc-demo__sourceref"},xs=[k('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml">\n<span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>使用参数visible显示隐藏 <span class="hljs-tag">&lt;<span class="hljs-name">span</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;visible1=true&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;green&quot;</span>&gt;</span>试一试<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-dialog</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;title&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;visible1&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>窗口内容，可包含任何内容<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>就是样式丑了点点<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">ak-dialog</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>使用组件open方法打开 <span class="hljs-tag">&lt;<span class="hljs-name">span</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;$refs.openDialog.open()&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;green&quot;</span>&gt;</span>试一试<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-dialog</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;title&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;openDialog&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;test-dialog&quot;</span>&gt;</span>窗口内容，可包含任何内容<span class="hljs-tag">&lt;/<span class="hljs-name">ak-dialog</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> {ref} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> visible1 = ref(<span class="hljs-literal">false</span>)\n    <span class="hljs-keyword">return</span> {\n      visible1\n    }\n  }\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</span></code></pre></div>',1)],Vs=i("h3",{id:"标题设置","data-source-line":"34"},[i("a",{class:"markdownIt-Anchor",href:"#标题设置"},"#"),j(" 标题设置")],-1),Hs=i("p",{"data-source-line":"36"},"标题可设置为空或通过slot设置，以满足各种不同的使用环境",-1),Ds=i("pre",{style:{display:"none"}},null,-1),Is={class:"vuedoc-demo "},Rs={class:"vuedoc-demo__inner"},As={class:"vuedoc-demo__preview"},Us={ref:"vdpv_1Ref",class:"vuedoc-demo__sourceref"},Os=[k('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml">\n<span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>slot设置的标题 <span class="hljs-tag">&lt;<span class="hljs-name">span</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;visible=true&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;green&quot;</span>&gt;</span>试一试<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-dialog</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;visible&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">title</span>&gt;</span>通过slot设标题<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这是一个通过slot设标题的 dialog 弹窗，当然也可以是不设置标题<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这是一个通过slot设标题的 dialog 弹窗<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这是一个通过slot设标题的 dialog 弹窗<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这是一个通过slot设标题的 dialog 弹窗<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">ak-dialog</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>没有标题的弹窗<span class="hljs-tag">&lt;<span class="hljs-name">span</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;visible1=true&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;green&quot;</span>&gt;</span>试一试<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-dialog</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;visible1&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这是一个通过slot设标题的 dialog 弹窗，当然也可以是不设置标题<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这是一个通过slot设标题的 dialog 弹窗<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这是一个通过slot设标题的 dialog 弹窗<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这是一个通过slot设标题的 dialog 弹窗<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">ak-dialog</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> {ref} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> visible = ref(<span class="hljs-literal">false</span>)\n    <span class="hljs-keyword">const</span> visible1 = ref(<span class="hljs-literal">false</span>)\n    <span class="hljs-keyword">return</span> {\n      visible,\n      visible1\n    }\n  }\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</span></code></pre></div>',1)],Ps=i("h3",{id:"设定窗宽高","data-source-line":"75"},[i("a",{class:"markdownIt-Anchor",href:"#设定窗宽高"},"#"),j(" 设定窗宽高")],-1),Ss=i("p",{"data-source-line":"77"},[j("一般情况不需要设"),i("code",null,"height"),j("，这个高是指弹窗主体内容的高，适用于弹窗内容区需要滚动的时候")],-1),zs=i("pre",{style:{display:"none"}},null,-1),Ms={class:"vuedoc-demo "},Ts={class:"vuedoc-demo__inner"},$s={class:"vuedoc-demo__preview"},Bs={ref:"vdpv_2Ref",class:"vuedoc-demo__sourceref"},Es=[k('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml">\n<span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">span</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;visible=true&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;green&quot;</span>&gt;</span>试一试<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">ak-dialog</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;visible&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;title&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;400px&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;200px&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>设置了宽高的 dialog 弹窗，设定了高时，内容溢出将显示纵向滚动条<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;height: 200px&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>设置了宽高的 dialog 弹窗，设定了高时，内容溢出将显示纵向滚动条<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">ak-dialog</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> {ref} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> visible = ref(<span class="hljs-literal">false</span>)\n    <span class="hljs-keyword">return</span> {\n      visible\n    }\n  }\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</span></code></pre></div>',1)],Fs=k('<h3 id="按钮事件" data-source-line="103"><a class="markdownIt-Anchor" href="#按钮事件">#</a> 按钮事件</h3><p data-source-line="105">默认下点击按钮是关闭弹窗口的，可通过<code>beforeClose</code>接收点击事件，根据实现按需关闭。<code>callback</code>同<code>beforeClose</code>，<code>callback</code>只针对确认事件。<code>beforeClose </code>它将会阻止窗口的关闭事件，需手动关闭</p><pre style="display:none;"></pre>',3),Gs={class:"vuedoc-demo "},Ns={class:"vuedoc-demo__inner"},Js={class:"vuedoc-demo__preview"},Ks={ref:"vdpv_3Ref",class:"vuedoc-demo__sourceref"},Ls=[k('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>添加确认和取消按钮<span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;green&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;visible=true&quot;</span>&gt;</span>试一试<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-dialog</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;visible&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;title&quot;</span> <span class="hljs-attr">confirm</span>=<span class="hljs-string">&quot;confirm&quot;</span> <span class="hljs-attr">cancel</span>=<span class="hljs-string">&quot;cancel&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这是按钮的 dialog 弹窗内容<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>默认情况下点击按钮后将关闭窗口<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">ak-dialog</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>绑定callback方法<span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;green&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;visible1=true&quot;</span>&gt;</span>试一试<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-dialog</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;visible1&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;title&quot;</span> <span class="hljs-attr">confirm</span>=<span class="hljs-string">&quot;confirm&quot;</span> <span class="hljs-attr">cancel</span>=<span class="hljs-string">&quot;cancel&quot;</span> <span class="hljs-attr">:callback</span>=<span class="hljs-string">&quot;callback&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>绑定callback方法后，点击确定不会关闭弹窗，可使用回调方法手动关闭<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">ak-dialog</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>绑定beforeClose方法<span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;green&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;visible2=true&quot;</span>&gt;</span>试一试<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-dialog</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;visible2&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;title&quot;</span> <span class="hljs-attr">confirm</span>=<span class="hljs-string">&quot;confirm&quot;</span> <span class="hljs-attr">cancel</span>=<span class="hljs-string">&quot;cancel&quot;</span> <span class="hljs-attr">:before-close</span>=<span class="hljs-string">&quot;beforeClose&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>绑定callback方法后，点击确定不会关闭弹窗，可使用回调方法手动关闭<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">ak-dialog</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> {ref} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> visible = ref(<span class="hljs-literal">false</span>)\n    <span class="hljs-keyword">const</span> visible1 = ref(<span class="hljs-literal">false</span>)\n    <span class="hljs-keyword">const</span> visible2 = ref(<span class="hljs-literal">false</span>)\n    <span class="hljs-keyword">const</span> callback = <span class="hljs-function"><span class="hljs-params">close</span> =&gt;</span> {\n      alert(<span class="hljs-string">&#39;确认关闭&#39;</span>)\n      close()\n    }\n    <span class="hljs-keyword">const</span> beforeClose = <span class="hljs-function">(<span class="hljs-params">type, close</span>) =&gt;</span> {\n      alert(<span class="hljs-string">&#39;你点击了&#39;</span> + type + <span class="hljs-string">&#39;，可使用return true或使用close方法可关闭&#39;</span>)\n      <span class="hljs-comment">// return true</span>\n      <span class="hljs-comment">// close()</span>\n    }\n    <span class="hljs-keyword">return</span> {\n      visible,\n      visible1,\n      visible2,\n      callback,\n      beforeClose\n    }\n  }\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n</span></code></pre></div>',1)],Qs=i("h3",{id:"自动关闭","data-source-line":"156"},[i("a",{class:"markdownIt-Anchor",href:"#自动关闭"},"#"),j(" 自动关闭")],-1),Ws=i("p",{"data-source-line":"158"},[j("通过设定"),i("code",null,"auto-close"),j("设置关闭时间，可自动关闭窗。同时可使用"),i("code",null,"closeTips"),j("修改倒计时提示语")],-1),Xs=i("pre",{style:{display:"none"}},null,-1),Ys={class:"vuedoc-demo "},Zs={class:"vuedoc-demo__inner"},sa={class:"vuedoc-demo__preview"},aa={ref:"vdpv_4Ref",class:"vuedoc-demo__sourceref"},la=[k('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml">\n<span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;green&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;visible=true&quot;</span>&gt;</span>试一试<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-dialog</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;visible&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;title&quot;</span> <span class="hljs-attr">:auto-close</span>=<span class="hljs-string">&quot;10&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这是的 dialog 弹窗内容<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这是一个会自动关闭的弹窗<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">ak-dialog</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> {ref} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> visible = ref(<span class="hljs-literal">false</span>)\n    <span class="hljs-keyword">return</span> {\n      visible\n    }\n  }\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n</span></code></pre></div>',1)],na=i("h3",{id:"嵌套弹窗","data-source-line":"186"},[i("a",{class:"markdownIt-Anchor",href:"#嵌套弹窗"},"#"),j(" 嵌套弹窗")],-1),ta=i("pre",{style:{display:"none"}},null,-1),pa={class:"vuedoc-demo "},ea={class:"vuedoc-demo__inner"},ca={class:"vuedoc-demo__preview"},oa={ref:"vdpv_5Ref",class:"vuedoc-demo__sourceref"},da=[k('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml">\n<span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;green&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;visible=true&quot;</span>&gt;</span>试一试<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-dialog</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;visible&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;title&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这是的 dialog 弹窗内容<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-symbol">&amp;nbsp;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;visible1=true&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;javascript:;&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;green&quot;</span>&gt;</span>点击这里打开内层弹窗口<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-symbol">&amp;nbsp;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这是的 dialog 弹窗内容<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">ak-dialog</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-dialog</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;visible1&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;title&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;300px&quot;</span>&gt;</span>内层弹窗<span class="hljs-tag">&lt;/<span class="hljs-name">ak-dialog</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> {ref} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> visible = ref(<span class="hljs-literal">false</span>)\n    <span class="hljs-keyword">const</span> visible1 = ref(<span class="hljs-literal">false</span>)\n    <span class="hljs-keyword">return</span> {\n      visible,\n      visible1\n    }\n  }\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n</span></code></pre></div>',1)],ha=i("h3",{id:"使用slotfooter自定按钮","data-source-line":"221"},[i("a",{class:"markdownIt-Anchor",href:"#使用slotfooter自定按钮"},"#"),j(' 使用slot="footer"自定按钮')],-1),ia=i("pre",{style:{display:"none"}},null,-1),ra={class:"vuedoc-demo "},ga={class:"vuedoc-demo__inner"},ja={class:"vuedoc-demo__preview"},ua={ref:"vdpv_6Ref",class:"vuedoc-demo__sourceref"},va=[k('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml">\n<span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;green&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;visible=true&quot;</span>&gt;</span>试一试<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-dialog</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;visible&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;title&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这是的 dialog 弹窗内容<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">footer</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">ak-button</span>&gt;</span>取消<span class="hljs-tag">&lt;/<span class="hljs-name">ak-button</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">ak-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>确定<span class="hljs-tag">&lt;/<span class="hljs-name">ak-button</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">ak-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>提交<span class="hljs-tag">&lt;/<span class="hljs-name">ak-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">ak-dialog</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> {ref} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> visible = ref(<span class="hljs-literal">false</span>)\n    <span class="hljs-keyword">return</span> {\n      visible\n    }\n  }\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n</span></code></pre></div>',1)],ma=i("h3",{id:"可拖动","data-source-line":"254"},[i("a",{class:"markdownIt-Anchor",href:"#可拖动"},"#"),j(" 可拖动")],-1),fa=i("p",{"data-source-line":"256"},[j("通过设置"),i("code",null,'move="true"'),j("可拖动改变窗口位置")],-1),_a=i("pre",{style:{display:"none"}},null,-1),ba={class:"vuedoc-demo "},ka={class:"vuedoc-demo__inner"},qa={class:"vuedoc-demo__preview"},ya={ref:"vdpv_7Ref",class:"vuedoc-demo__sourceref"},wa=[k('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml">\n<span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;green&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;visible=true&quot;</span>&gt;</span>试一试<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-dialog</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;visible&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;title&quot;</span> <span class="hljs-attr">:move</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这是的 dialog 弹窗内容<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>可通过点击标题栏移动窗口位置<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">ak-dialog</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n<span class="hljs-keyword">import</span> {ref} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> visible = ref(<span class="hljs-literal">false</span>)\n    <span class="hljs-keyword">return</span> {\n      visible\n    }\n  }\n}\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n</span></code></pre></div>',1)],Ca=k('<h2 id="api" data-source-line="284"><a class="markdownIt-Anchor" href="#api">#</a> API</h2><h3 id="dialog" data-source-line="286"><a class="markdownIt-Anchor" href="#dialog">#</a> Dialog</h3><table data-source-line="288"><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>v-model</td><td>boolean/false</td><td>显示隐藏 Dialog</td></tr><tr><td>title</td><td>string</td><td>Dialog 的标题，也可通过具名 slot 方式</td></tr><tr><td>content</td><td>null</td><td>Dialog 的内容，建议使用slot方式</td></tr><tr><td>width</td><td>string</td><td>Dialog 的宽度</td></tr><tr><td>height</td><td>string</td><td>Dialog 的高度，这里是指弹窗内容区域的高度，溢出时显示滚动条，一般情况下不需要设置</td></tr><tr><td>top</td><td>string</td><td>Dialog 距离浏览器顶部的距离，设置了<code>center</code>后样式会被覆盖</td></tr><tr><td>className</td><td>string</td><td>Dialog 样式名</td></tr><tr><td>confirm</td><td>string</td><td>确认按钮，点击默认关闭窗口</td></tr><tr><td>cancel</td><td>string</td><td>取消按钮，点击默认关闭窗口</td></tr><tr><td>beforeClose</td><td>function</td><td>关闭前的回调，会阻止 Dialog 的关闭。function(type,close),type=close/confirm/cancel/modal 表示点了哪里关闭，close 方法用于关闭 Dialog</td></tr><tr><td>callback</td><td>function</td><td>确定回调比较常用而添加，同<code>beforeClose</code>，相当于type=confirm，减少对type的判断。根据需求和<code>beforeClose</code>二选一使用</td></tr><tr><td>modal</td><td>boolean/true</td><td>是否需要遮罩层</td></tr><tr><td>closeModal</td><td>boolean/true</td><td>是否可以通过点击 modal 关闭 Dialog</td></tr><tr><td>appendToBody</td><td>boolean/true</td><td>Dialog 自身是否插入至 body 元素上</td></tr><tr><td>lockScroll</td><td>boolean/true</td><td>是否在 Dialog 出现时将 body 滚动锁定</td></tr><tr><td>showClose</td><td>boolean/true</td><td>是否显示关闭按钮，点击默认关闭窗口</td></tr><tr><td>move</td><td>boolean/false</td><td>允许拖动窗口</td></tr><tr><td>autoClose</td><td>number/0</td><td>自动关闭时间，单位秒。0为不自动关闭</td></tr><tr><td>closeTips</td><td>string</td><td>自动关闭倒计时提示语，默认<code>S秒后自动关闭</code>大写S会被替换成实际时间</td></tr><tr><td>animation</td><td>string</td><td>动画样式名，可选<code>zoom</code>,<code>fade</code></td></tr><tr><td>center</td><td>boolean/true</td><td>居中对齐</td></tr><tr><td>icon</td><td>number/0</td><td>用于展示常见的alert提示显示对应的icon图标，1成功，2失败，3提示，4警告。其它的可通过添加样式控制</td></tr><tr><td>zIndex</td><td>number</td><td>弹层的z-index样式</td></tr></tbody></table><h3 id="dialog-slot" data-source-line="314"><a class="markdownIt-Anchor" href="#dialog-slot">#</a> Dialog Slot</h3><table data-source-line="316"><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>title</td><td>标题</td></tr><tr><td>footer</td><td>尾部内容</td></tr></tbody></table><h3 id="dialog-methods" data-source-line="321"><a class="markdownIt-Anchor" href="#dialog-methods">#</a> Dialog Methods</h3><table data-source-line="323"><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>open</td><td>打开窗口，使用此方法打开时不支持v-model双向绑定</td></tr><tr><td>close</td><td>关闭窗口</td></tr></tbody></table>',7);_s.render=function(s,a,l,n,t,p){const e=o("vdpv_0"),c=o("vdpv_1"),g=o("vdpv_2"),j=o("vdpv_3"),u=o("vdpv_4"),v=o("vdpv_5"),m=o("vdpv_6"),f=o("vdpv_7");return d(),h("div",bs,[ks,i("div",qs,[i("div",ys,[i("div",ws,[r(e)]),i("div",{style:_({height:s.vdpv_0Height+"px"}),class:"vuedoc-demo__source"},[i("div",Cs,xs,512)],4),i("div",{class:"vuedoc-demo__footer",onClick:a[0]||(a[0]=a=>s.toggleCode(0))},b(s.vdpv_0Height>0?"hidden":"show"),1)])]),Vs,Hs,Ds,i("div",Is,[i("div",Rs,[i("div",As,[r(c)]),i("div",{style:_({height:s.vdpv_1Height+"px"}),class:"vuedoc-demo__source"},[i("div",Us,Os,512)],4),i("div",{class:"vuedoc-demo__footer",onClick:a[1]||(a[1]=a=>s.toggleCode(1))},b(s.vdpv_1Height>0?"hidden":"show"),1)])]),Ps,Ss,zs,i("div",Ms,[i("div",Ts,[i("div",$s,[r(g)]),i("div",{style:_({height:s.vdpv_2Height+"px"}),class:"vuedoc-demo__source"},[i("div",Bs,Es,512)],4),i("div",{class:"vuedoc-demo__footer",onClick:a[2]||(a[2]=a=>s.toggleCode(2))},b(s.vdpv_2Height>0?"hidden":"show"),1)])]),Fs,i("div",Gs,[i("div",Ns,[i("div",Js,[r(j)]),i("div",{style:_({height:s.vdpv_3Height+"px"}),class:"vuedoc-demo__source"},[i("div",Ks,Ls,512)],4),i("div",{class:"vuedoc-demo__footer",onClick:a[3]||(a[3]=a=>s.toggleCode(3))},b(s.vdpv_3Height>0?"hidden":"show"),1)])]),Qs,Ws,Xs,i("div",Ys,[i("div",Zs,[i("div",sa,[r(u)]),i("div",{style:_({height:s.vdpv_4Height+"px"}),class:"vuedoc-demo__source"},[i("div",aa,la,512)],4),i("div",{class:"vuedoc-demo__footer",onClick:a[4]||(a[4]=a=>s.toggleCode(4))},b(s.vdpv_4Height>0?"hidden":"show"),1)])]),na,ta,i("div",pa,[i("div",ea,[i("div",ca,[r(v)]),i("div",{style:_({height:s.vdpv_5Height+"px"}),class:"vuedoc-demo__source"},[i("div",oa,da,512)],4),i("div",{class:"vuedoc-demo__footer",onClick:a[5]||(a[5]=a=>s.toggleCode(5))},b(s.vdpv_5Height>0?"hidden":"show"),1)])]),ha,ia,i("div",ra,[i("div",ga,[i("div",ja,[r(m)]),i("div",{style:_({height:s.vdpv_6Height+"px"}),class:"vuedoc-demo__source"},[i("div",ua,va,512)],4),i("div",{class:"vuedoc-demo__footer",onClick:a[6]||(a[6]=a=>s.toggleCode(6))},b(s.vdpv_6Height>0?"hidden":"show"),1)])]),ma,fa,_a,i("div",ba,[i("div",ka,[i("div",qa,[r(f)]),i("div",{style:_({height:s.vdpv_7Height+"px"}),class:"vuedoc-demo__source"},[i("div",ya,wa,512)],4),i("div",{class:"vuedoc-demo__footer",onClick:a[7]||(a[7]=a=>s.toggleCode(7))},b(s.vdpv_7Height>0?"hidden":"show"),1)])]),Ca])};export{_s as default};
