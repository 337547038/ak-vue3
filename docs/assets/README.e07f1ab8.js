var s=Object.defineProperty,a=Object.defineProperties,l=Object.getOwnPropertyDescriptors,n=Object.getOwnPropertySymbols,t=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,e=(a,l,n)=>l in a?s(a,l,{enumerable:!0,configurable:!0,writable:!0,value:n}):a[l]=n;import{d as c,r as o,a as d,o as h,c as r,b as g,f as i,w as j,g as u,F as v,l as m,C as _,B as f,t as q,S as k}from"./vendor.393926ba.js";const b=u(" 使用参数visible显示隐藏 "),y=g("p",null,"窗口内容，可包含任何内容",-1),w=g("p",null,"就是样式丑了点点",-1),C=u(" 使用组件open方法打开 "),V=u("窗口内容，可包含任何内容 ");var H=c({setup(s){const a=o(!1);return(s,l)=>{const n=d("ak-dialog");return h(),r("div",null,[g("p",null,[b,g("span",{onClick:l[0]||(l[0]=s=>a.value=!0),class:"green"},"试一试")]),i(n,{title:"title",modelValue:a.value,"onUpdate:modelValue":l[1]||(l[1]=s=>a.value=s)},{default:j((()=>[y,w])),_:1},8,["modelValue"]),g("p",null,[C,g("span",{onClick:l[2]||(l[2]=a=>s.$refs.openDialog.open()),class:"green"},"试一试")]),i(n,{title:"title",ref:openDialog,class:"test-dialog"},{default:j((()=>[V])),_:1},512)])}}});const x=u(" slot设置的标题 "),D=u("通过slot设标题"),I=g("p",null,"这是一个通过slot设标题的 dialog 弹窗，当然也可以是不设置标题",-1),R=g("p",null,"这是一个通过slot设标题的 dialog 弹窗",-1),A=g("p",null,"这是一个通过slot设标题的 dialog 弹窗",-1),U=g("p",null,"这是一个通过slot设标题的 dialog 弹窗",-1),O=u(" 没有标题的弹窗"),P=g("p",null,"这是一个通过slot设标题的 dialog 弹窗，当然也可以是不设置标题",-1),S=g("p",null,"这是一个通过slot设标题的 dialog 弹窗",-1),z=g("p",null,"这是一个通过slot设标题的 dialog 弹窗",-1),M=g("p",null,"这是一个通过slot设标题的 dialog 弹窗",-1);var T=c({setup(s){const a=o(!1),l=o(!1);return(s,n)=>{const t=d("ak-dialog");return h(),r("div",null,[g("p",null,[x,g("span",{onClick:n[0]||(n[0]=s=>a.value=!0),class:"green"},"试一试")]),i(t,{modelValue:a.value,"onUpdate:modelValue":n[1]||(n[1]=s=>a.value=s)},{title:j((()=>[D])),default:j((()=>[I,R,A,U])),_:1},8,["modelValue"]),g("p",null,[O,g("span",{onClick:n[2]||(n[2]=s=>l.value=!0),class:"green"},"试一试")]),i(t,{modelValue:l.value,"onUpdate:modelValue":n[3]||(n[3]=s=>l.value=s)},{default:j((()=>[P,S,z,M])),_:1},8,["modelValue"])])}}});const $=g("p",null,"设置了宽高的 dialog 弹窗，设定了高时，内容溢出将显示纵向滚动条",-1),B=g("p",{style:{height:"200px"}},null,-1),E=g("p",null,"设置了宽高的 dialog 弹窗，设定了高时，内容溢出将显示纵向滚动条",-1),F={setup(s){const a=o(!1);return(s,l)=>{const n=d("ak-dialog");return h(),r(v,null,[g("span",{onClick:l[0]||(l[0]=s=>a.value=!0),class:"green"},"试一试"),i(n,{modelValue:a.value,"onUpdate:modelValue":l[1]||(l[1]=s=>a.value=s),title:"title",width:"400px",height:"200px"},{default:j((()=>[$,B,E])),_:1},8,["modelValue"])],64)}}},N=u(" 添加确认和取消按钮"),G=g("p",null,"这是按钮的 dialog 弹窗内容",-1),J=g("p",null,"默认情况下点击按钮后将关闭窗口",-1),K=u(" 绑定callback方法"),L=g("p",null,"绑定callback方法后，点击确定不会关闭弹窗，可使用回调方法手动关闭",-1),Q=u(" 绑定beforeClose方法"),W=g("p",null,"绑定callback方法后，点击确定不会关闭弹窗，可使用回调方法手动关闭",-1);var X=c({setup(s){const a=o(!1),l=o(!1),n=o(!1),t=s=>{alert("确认关闭"),s()},p=s=>{alert("你点击了"+s+"，可使用return true或使用close方法可关闭")};return(s,e)=>{const c=d("ak-dialog");return h(),r("div",null,[g("p",null,[N,g("span",{class:"green",onClick:e[0]||(e[0]=s=>a.value=!0)},"试一试")]),i(c,{modelValue:a.value,"onUpdate:modelValue":e[1]||(e[1]=s=>a.value=s),title:"title",confirm:"confirm",cancel:"cancel"},{default:j((()=>[G,J])),_:1},8,["modelValue"]),g("p",null,[K,g("span",{class:"green",onClick:e[2]||(e[2]=s=>l.value=!0)},"试一试")]),i(c,{modelValue:l.value,"onUpdate:modelValue":e[3]||(e[3]=s=>l.value=s),title:"title",confirm:"confirm",cancel:"cancel",callback:t},{default:j((()=>[L])),_:1},8,["modelValue"]),g("p",null,[Q,g("span",{class:"green",onClick:e[4]||(e[4]=s=>n.value=!0)},"试一试")]),i(c,{modelValue:n.value,"onUpdate:modelValue":e[5]||(e[5]=s=>n.value=s),title:"title",confirm:"confirm",cancel:"cancel","before-close":p},{default:j((()=>[W])),_:1},8,["modelValue"])])}}});const Y=g("p",null,"这是的 dialog 弹窗内容",-1),Z=g("p",null,"这是一个会自动关闭的弹窗",-1);var ss=c({setup(s){const a=o(!1);return(s,l)=>{const n=d("ak-dialog");return h(),r("div",null,[g("span",{class:"green",onClick:l[0]||(l[0]=s=>a.value=!0)},"试一试"),i(n,{modelValue:a.value,"onUpdate:modelValue":l[1]||(l[1]=s=>a.value=s),title:"title","auto-close":10},{default:j((()=>[Y,Z])),_:1},8,["modelValue"])])}}});const as=g("p",null,"这是的 dialog 弹窗内容",-1),ls=g("p",null," ",-1),ns=[g("a",{href:"javascript:;",class:"green"},"点击这里打开内层弹窗口",-1)],ts=g("p",null," ",-1),ps=g("p",null,"这是的 dialog 弹窗内容",-1),es=g("p",null,null,-1),cs=u("内层弹窗");var os=c({setup(s){const a=o(!1),l=o(!1);return(s,n)=>{const t=d("ak-dialog");return h(),r("div",null,[g("span",{class:"green",onClick:n[0]||(n[0]=s=>a.value=!0)},"试一试"),i(t,{modelValue:a.value,"onUpdate:modelValue":n[2]||(n[2]=s=>a.value=s),title:"title"},{default:j((()=>[as,ls,g("p",{onClick:n[1]||(n[1]=s=>l.value=!0)},ns),ts,ps,es])),_:1},8,["modelValue"]),i(t,{modelValue:l.value,"onUpdate:modelValue":n[3]||(n[3]=s=>l.value=s),title:"title",width:"300px"},{default:j((()=>[cs])),_:1},8,["modelValue"])])}}});const ds=g("p",null,"这是的 dialog 弹窗内容",-1),hs=g("p",null,null,-1),rs=u("取消"),gs=u("确定"),is=u("提交");var js=c({setup(s){const a=o(!1);return(s,l)=>{const n=d("ak-button"),t=d("ak-dialog");return h(),r("div",null,[g("span",{class:"green",onClick:l[0]||(l[0]=s=>a.value=!0)},"试一试"),i(t,{modelValue:a.value,"onUpdate:modelValue":l[1]||(l[1]=s=>a.value=s),title:"title"},{footer:j((()=>[i(n,null,{default:j((()=>[rs])),_:1}),i(n,{type:"primary"},{default:j((()=>[gs])),_:1}),i(n,{type:"primary"},{default:j((()=>[is])),_:1})])),default:j((()=>[ds,hs])),_:1},8,["modelValue"])])}}});const us=g("p",null,"这是的 dialog 弹窗内容",-1),vs=g("p",null,"可通过点击标题栏移动窗口位置",-1);var ms=c({setup(s){const a=o(!1);return(s,l)=>{const n=d("ak-dialog");return h(),r("div",null,[g("span",{class:"green",onClick:l[0]||(l[0]=s=>a.value=!0)},"试一试"),i(n,{modelValue:a.value,"onUpdate:modelValue":l[1]||(l[1]=s=>a.value=s),title:"title",move:!0},{default:j((()=>[us,vs])),_:1},8,["modelValue"])])}}});const _s=c({components:{vdpv_0:H,vdpv_1:T,vdpv_2:F,vdpv_3:X,vdpv_4:ss,vdpv_5:os,vdpv_6:js,vdpv_7:ms},setup(s){const c=o(),d=o(),h=o(),r=o(),g=o(),i=o(),j=o(),u=o(),v=[c,d,h,r,g,i,j,u],f=m({vdpv_0Height:0,vdpv_1Height:0,vdpv_2Height:0,vdpv_3Height:0,vdpv_4Height:0,vdpv_5Height:0,vdpv_6Height:0,vdpv_7Height:0});return q=((s,a)=>{for(var l in a||(a={}))t.call(a,l)&&e(s,l,a[l]);if(n)for(var l of n(a))p.call(a,l)&&e(s,l,a[l]);return s})({toggleCode:s=>{const a="vdpv_"+s;0===f[a+"Height"]?f[a+"Height"]=(v[s].value?v[s].value.offsetHeight:0)||0:f[a+"Height"]=0}},_(f)),a(q,l({vdpv_0Ref:c,vdpv_1Ref:d,vdpv_2Ref:h,vdpv_3Ref:r,vdpv_4Ref:g,vdpv_5Ref:i,vdpv_6Ref:j,vdpv_7Ref:u}));var q}});_s.$vd={matter:{},toc:[{content:"Dialog 弹层对话框",anchor:"dialog-弹层对话框",level:1},{content:"基本用法",anchor:"基本用法",level:3},{content:"标题设置",anchor:"标题设置",level:3},{content:"设定窗宽高",anchor:"设定窗宽高",level:3},{content:"按钮事件",anchor:"按钮事件",level:3},{content:"自动关闭",anchor:"自动关闭",level:3},{content:"嵌套弹窗",anchor:"嵌套弹窗",level:3},{content:'使用slot="footer"自定按钮',anchor:"使用slotfooter自定按钮",level:3},{content:"可拖动",anchor:"可拖动",level:3},{content:"API",anchor:"api",level:2},{content:"Dialog",anchor:"dialog",level:3},{content:"Dialog Slot",anchor:"dialog-slot",level:3},{content:"Dialog Methods",anchor:"dialog-methods",level:3}]};const fs=_s,qs={class:"vuedoc  "},ks=k('<h1 id="dialog-弹层对话框" data-source-line="3"><a class="markdownIt-Anchor" href="#dialog-弹层对话框">#</a> Dialog 弹层对话框</h1><h3 id="基本用法" data-source-line="5"><a class="markdownIt-Anchor" href="#基本用法">#</a> 基本用法</h3><pre style="display:none;"></pre>',3),bs={class:"vuedoc-demo "},ys={class:"vuedoc-demo__inner"},ws={class:"vuedoc-demo__preview"},Cs={ref:"vdpv_0Ref",class:"vuedoc-demo__sourceref"},Vs=[k('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n      使用参数visible显示隐藏\n      <span class="hljs-tag">&lt;<span class="hljs-name">span</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;visible1 = true&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;green&quot;</span>&gt;</span>试一试<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-dialog</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;title&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;visible1&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>窗口内容，可包含任何内容<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>就是样式丑了点点<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">ak-dialog</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n      使用组件open方法打开\n      <span class="hljs-tag">&lt;<span class="hljs-name">span</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;$refs.openDialog.open()&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;green&quot;</span>&gt;</span>试一试<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-dialog</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;title&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;openDialog&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;test-dialog&quot;</span>\n      &gt;</span>窗口内容，可包含任何内容\n    <span class="hljs-tag">&lt;/<span class="hljs-name">ak-dialog</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;ts&quot;</span> <span class="hljs-attr">setup</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n  <span class="hljs-keyword">const</span> visible1 = ref(<span class="hljs-literal">false</span>)\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n</span></code></pre></div>',1)],Hs=g("h3",{id:"标题设置","data-source-line":"35"},[g("a",{class:"markdownIt-Anchor",href:"#标题设置"},"#"),u(" 标题设置")],-1),xs=g("p",{"data-source-line":"37"},"标题可设置为空或通过slot设置，以满足各种不同的使用环境",-1),Ds=g("pre",{style:{display:"none"}},null,-1),Is={class:"vuedoc-demo "},Rs={class:"vuedoc-demo__inner"},As={class:"vuedoc-demo__preview"},Us={ref:"vdpv_1Ref",class:"vuedoc-demo__sourceref"},Os=[k('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n      slot设置的标题 <span class="hljs-tag">&lt;<span class="hljs-name">span</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;visible = true&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;green&quot;</span>&gt;</span>试一试<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-dialog</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;visible&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">title</span>&gt;</span>通过slot设标题<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这是一个通过slot设标题的 dialog 弹窗，当然也可以是不设置标题<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这是一个通过slot设标题的 dialog 弹窗<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这是一个通过slot设标题的 dialog 弹窗<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这是一个通过slot设标题的 dialog 弹窗<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">ak-dialog</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n      没有标题的弹窗<span class="hljs-tag">&lt;<span class="hljs-name">span</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;visible1 = true&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;green&quot;</span>&gt;</span>试一试<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-dialog</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;visible1&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这是一个通过slot设标题的 dialog 弹窗，当然也可以是不设置标题<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这是一个通过slot设标题的 dialog 弹窗<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这是一个通过slot设标题的 dialog 弹窗<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这是一个通过slot设标题的 dialog 弹窗<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">ak-dialog</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">setup</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;ts&quot;</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n  <span class="hljs-keyword">const</span> visible = ref(<span class="hljs-literal">false</span>)\n  <span class="hljs-keyword">const</span> visible1 = ref(<span class="hljs-literal">false</span>)\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n</span></code></pre></div>',1)],Ps=g("h3",{id:"设定窗宽高","data-source-line":"72"},[g("a",{class:"markdownIt-Anchor",href:"#设定窗宽高"},"#"),u(" 设定窗宽高")],-1),Ss=g("p",{"data-source-line":"74"},[u("一般情况不需要设"),g("code",null,"height"),u("，这个高是指弹窗主体内容的高，适用于弹窗内容区需要滚动的时候")],-1),zs=g("pre",{style:{display:"none"}},null,-1),Ms={class:"vuedoc-demo "},Ts={class:"vuedoc-demo__inner"},$s={class:"vuedoc-demo__preview"},Bs={ref:"vdpv_2Ref",class:"vuedoc-demo__sourceref"},Es=[k('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">span</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;visible = true&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;green&quot;</span>&gt;</span>试一试<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">ak-dialog</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;visible&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;title&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;400px&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;200px&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>设置了宽高的 dialog 弹窗，设定了高时，内容溢出将显示纵向滚动条<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;height: 200px&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>设置了宽高的 dialog 弹窗，设定了高时，内容溢出将显示纵向滚动条<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">ak-dialog</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">setup</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n  <span class="hljs-keyword">const</span> visible = ref(<span class="hljs-literal">false</span>)\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n</span></code></pre></div>',1)],Fs=k('<h3 id="按钮事件" data-source-line="93"><a class="markdownIt-Anchor" href="#按钮事件">#</a> 按钮事件</h3><p data-source-line="95">默认下点击按钮是关闭弹窗口的，可通过<code>beforeClose</code>接收点击事件，根据实现按需关闭。<code>callback</code>同<code>beforeClose</code>，<code>callback</code>只针对确认事件。<code>beforeClose </code>它将会阻止窗口的关闭事件，需另外调用方法关闭</p><pre style="display:none;"></pre>',3),Ns={class:"vuedoc-demo "},Gs={class:"vuedoc-demo__inner"},Js={class:"vuedoc-demo__preview"},Ks={ref:"vdpv_3Ref",class:"vuedoc-demo__sourceref"},Ls=[k('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n      添加确认和取消按钮<span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;green&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;visible = true&quot;</span>\n        &gt;</span>试一试&lt;/span\n      &gt;\n    <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-dialog</span>\n      <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;visible&quot;</span>\n      <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;title&quot;</span>\n      <span class="hljs-attr">confirm</span>=<span class="hljs-string">&quot;confirm&quot;</span>\n      <span class="hljs-attr">cancel</span>=<span class="hljs-string">&quot;cancel&quot;</span>\n    &gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这是按钮的 dialog 弹窗内容<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>默认情况下点击按钮后将关闭窗口<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">ak-dialog</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n      绑定callback方法<span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;green&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;visible1 = true&quot;</span>&gt;</span>试一试<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-dialog</span>\n      <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;visible1&quot;</span>\n      <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;title&quot;</span>\n      <span class="hljs-attr">confirm</span>=<span class="hljs-string">&quot;confirm&quot;</span>\n      <span class="hljs-attr">cancel</span>=<span class="hljs-string">&quot;cancel&quot;</span>\n      <span class="hljs-attr">:callback</span>=<span class="hljs-string">&quot;callback&quot;</span>\n    &gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>绑定callback方法后，点击确定不会关闭弹窗，可使用回调方法手动关闭<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">ak-dialog</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n      绑定beforeClose方法<span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;green&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;visible2 = true&quot;</span>\n        &gt;</span>试一试&lt;/span\n      &gt;\n    <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-dialog</span>\n      <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;visible2&quot;</span>\n      <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;title&quot;</span>\n      <span class="hljs-attr">confirm</span>=<span class="hljs-string">&quot;confirm&quot;</span>\n      <span class="hljs-attr">cancel</span>=<span class="hljs-string">&quot;cancel&quot;</span>\n      <span class="hljs-attr">:before-close</span>=<span class="hljs-string">&quot;beforeClose&quot;</span>\n    &gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>绑定callback方法后，点击确定不会关闭弹窗，可使用回调方法手动关闭<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">ak-dialog</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;ts&quot;</span> <span class="hljs-attr">setup</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n  <span class="hljs-keyword">const</span> visible = ref(<span class="hljs-literal">false</span>)\n  <span class="hljs-keyword">const</span> visible1 = ref(<span class="hljs-literal">false</span>)\n  <span class="hljs-keyword">const</span> visible2 = ref(<span class="hljs-literal">false</span>)\n  <span class="hljs-keyword">const</span> callback = <span class="hljs-function">(<span class="hljs-params">close: () =&gt; <span class="hljs-keyword">void</span></span>) =&gt;</span> {\n    alert(<span class="hljs-string">&#39;确认关闭&#39;</span>)\n    close()\n  }\n  <span class="hljs-keyword">const</span> beforeClose = <span class="hljs-function">(<span class="hljs-params">type: string</span>) =&gt;</span> {\n    alert(<span class="hljs-string">&#39;你点击了&#39;</span> + type + <span class="hljs-string">&#39;，可使用return true或使用close方法可关闭&#39;</span>)\n    <span class="hljs-comment">// return true</span>\n    <span class="hljs-comment">// close()</span>\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n\n</span></code></pre></div>',1)],Qs=g("h3",{id:"自动关闭","data-source-line":"163"},[g("a",{class:"markdownIt-Anchor",href:"#自动关闭"},"#"),u(" 自动关闭")],-1),Ws=g("p",{"data-source-line":"165"},[u("通过设定"),g("code",null,"auto-close"),u("设置关闭时间，可自动关闭窗。同时可使用"),g("code",null,"closeTips"),u("修改倒计时提示语")],-1),Xs=g("pre",{style:{display:"none"}},null,-1),Ys={class:"vuedoc-demo "},Zs={class:"vuedoc-demo__inner"},sa={class:"vuedoc-demo__preview"},aa={ref:"vdpv_4Ref",class:"vuedoc-demo__sourceref"},la=[k('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;green&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;visible = true&quot;</span>&gt;</span>试一试<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-dialog</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;visible&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;title&quot;</span> <span class="hljs-attr">:auto-close</span>=<span class="hljs-string">&quot;10&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这是的 dialog 弹窗内容<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这是一个会自动关闭的弹窗<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">ak-dialog</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;ts&quot;</span> <span class="hljs-attr">setup</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n  <span class="hljs-keyword">const</span> visible = ref(<span class="hljs-literal">false</span>)\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n\n</span></code></pre></div>',1)],na=g("h3",{id:"嵌套弹窗","data-source-line":"186"},[g("a",{class:"markdownIt-Anchor",href:"#嵌套弹窗"},"#"),u(" 嵌套弹窗")],-1),ta=g("pre",{style:{display:"none"}},null,-1),pa={class:"vuedoc-demo "},ea={class:"vuedoc-demo__inner"},ca={class:"vuedoc-demo__preview"},oa={ref:"vdpv_5Ref",class:"vuedoc-demo__sourceref"},da=[k('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;green&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;visible = true&quot;</span>&gt;</span>试一试<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-dialog</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;visible&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;title&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这是的 dialog 弹窗内容<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-symbol">&amp;nbsp;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;visible1 = true&quot;</span>\n        &gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;javascript:;&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;green&quot;</span>&gt;</span>点击这里打开内层弹窗口<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>&lt;/p\n      &gt;\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-symbol">&amp;nbsp;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这是的 dialog 弹窗内容<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">ak-dialog</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-dialog</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;visible1&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;title&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;300px&quot;</span>\n      &gt;</span>内层弹窗&lt;/ak-dialog\n    &gt;\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;ts&quot;</span> <span class="hljs-attr">setup</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n  <span class="hljs-keyword">const</span> visible = ref(<span class="hljs-literal">false</span>)\n  <span class="hljs-keyword">const</span> visible1 = ref(<span class="hljs-literal">false</span>)\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n\n</span></code></pre></div>',1)],ha=g("h3",{id:"使用slotfooter自定按钮","data-source-line":"217"},[g("a",{class:"markdownIt-Anchor",href:"#使用slotfooter自定按钮"},"#"),u(' 使用slot="footer"自定按钮')],-1),ra=g("pre",{style:{display:"none"}},null,-1),ga={class:"vuedoc-demo "},ia={class:"vuedoc-demo__inner"},ja={class:"vuedoc-demo__preview"},ua={ref:"vdpv_6Ref",class:"vuedoc-demo__sourceref"},va=[k('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;green&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;visible = true&quot;</span>&gt;</span>试一试<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-dialog</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;visible&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;title&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这是的 dialog 弹窗内容<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">footer</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">ak-button</span>&gt;</span>取消<span class="hljs-tag">&lt;/<span class="hljs-name">ak-button</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">ak-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>确定<span class="hljs-tag">&lt;/<span class="hljs-name">ak-button</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">ak-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>提交<span class="hljs-tag">&lt;/<span class="hljs-name">ak-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">ak-dialog</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">setup</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;ts&quot;</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n  <span class="hljs-keyword">const</span> visible = ref(<span class="hljs-literal">false</span>)\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n</span></code></pre></div>',1)],ma=g("h3",{id:"可拖动","data-source-line":"242"},[g("a",{class:"markdownIt-Anchor",href:"#可拖动"},"#"),u(" 可拖动")],-1),_a=g("p",{"data-source-line":"244"},[u("通过设置"),g("code",null,'move="true"'),u("可拖动改变窗口位置")],-1),fa=g("pre",{style:{display:"none"}},null,-1),qa={class:"vuedoc-demo "},ka={class:"vuedoc-demo__inner"},ba={class:"vuedoc-demo__preview"},ya={ref:"vdpv_7Ref",class:"vuedoc-demo__sourceref"},wa=[k('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;green&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;visible = true&quot;</span>&gt;</span>试一试<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-dialog</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;visible&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;title&quot;</span> <span class="hljs-attr">:move</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这是的 dialog 弹窗内容<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>可通过点击标题栏移动窗口位置<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">ak-dialog</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;ts&quot;</span> <span class="hljs-attr">setup</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n  <span class="hljs-keyword">const</span> visible = ref(<span class="hljs-literal">false</span>)\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n</span></code></pre></div>',1)],Ca=k('<h2 id="api" data-source-line="264"><a class="markdownIt-Anchor" href="#api">#</a> API</h2><h3 id="dialog" data-source-line="266"><a class="markdownIt-Anchor" href="#dialog">#</a> Dialog</h3><table data-source-line="268"><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>v-model</td><td>boolean/false</td><td>显示隐藏 Dialog</td></tr><tr><td>title</td><td>string</td><td>Dialog 的标题，也可通过具名 slot 方式</td></tr><tr><td>content</td><td>null</td><td>Dialog 的内容，建议使用slot方式</td></tr><tr><td>width</td><td>string</td><td>Dialog 的宽度</td></tr><tr><td>height</td><td>string</td><td>Dialog 的高度，这里是指弹窗内容区域的高度，溢出时显示滚动条，一般情况下不需要设置</td></tr><tr><td>top</td><td>string</td><td>Dialog 距离浏览器顶部的距离，设置了<code>center</code>后样式会被覆盖</td></tr><tr><td>className</td><td>string</td><td>Dialog 样式名</td></tr><tr><td>confirm</td><td>string</td><td>确认按钮，点击默认关闭窗口</td></tr><tr><td>cancel</td><td>string</td><td>取消按钮，点击默认关闭窗口</td></tr><tr><td>beforeClose</td><td>function</td><td>关闭前的回调，会阻止 Dialog 的关闭。function(type,close),type=close/confirm/cancel/modal 表示点了哪里关闭，close 方法用于关闭 Dialog</td></tr><tr><td>callback</td><td>function</td><td>确定回调比较常用而添加，同<code>beforeClose</code>，相当于type=confirm，减少对type的判断。根据需求和<code>beforeClose</code>二选一使用</td></tr><tr><td>modal</td><td>boolean/true</td><td>是否需要遮罩层</td></tr><tr><td>closeModal</td><td>boolean/true</td><td>是否可以通过点击 modal 关闭 Dialog</td></tr><tr><td>appendToBody</td><td>boolean/true</td><td>Dialog 自身是否插入至 body 元素上</td></tr><tr><td>lockScroll</td><td>boolean/true</td><td>是否在 Dialog 出现时将 body 滚动锁定</td></tr><tr><td>showClose</td><td>boolean/true</td><td>是否显示关闭按钮，点击默认关闭窗口</td></tr><tr><td>move</td><td>boolean/false</td><td>允许拖动窗口</td></tr><tr><td>autoClose</td><td>number/0</td><td>自动关闭时间，单位秒。0为不自动关闭</td></tr><tr><td>closeTips</td><td>string</td><td>自动关闭倒计时提示语，默认<code>S秒后自动关闭</code>大写S会被替换成实际时间</td></tr><tr><td>animation</td><td>string</td><td>动画样式名，可选<code>zoom</code>,<code>fade</code></td></tr><tr><td>center</td><td>boolean/true</td><td>居中对齐</td></tr><tr><td>icon</td><td>number/0</td><td>用于展示常见的alert提示显示对应的icon图标，1成功，2失败，3提示，4警告。其它的可通过添加样式控制</td></tr><tr><td>zIndex</td><td>number</td><td>弹层的z-index样式</td></tr></tbody></table><h3 id="dialog-slot" data-source-line="294"><a class="markdownIt-Anchor" href="#dialog-slot">#</a> Dialog Slot</h3><table data-source-line="296"><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>title</td><td>标题</td></tr><tr><td>footer</td><td>尾部内容</td></tr></tbody></table><h3 id="dialog-methods" data-source-line="301"><a class="markdownIt-Anchor" href="#dialog-methods">#</a> Dialog Methods</h3><table data-source-line="303"><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>open</td><td>打开窗口，使用此方法打开时不支持v-model双向绑定</td></tr><tr><td>close</td><td>关闭窗口</td></tr></tbody></table>',7);fs.render=function(s,a,l,n,t,p){const e=d("vdpv_0"),c=d("vdpv_1"),o=d("vdpv_2"),j=d("vdpv_3"),u=d("vdpv_4"),v=d("vdpv_5"),m=d("vdpv_6"),_=d("vdpv_7");return h(),r("div",qs,[ks,g("div",bs,[g("div",ys,[g("div",ws,[i(e)]),g("div",{style:f({height:s.vdpv_0Height+"px"}),class:"vuedoc-demo__source"},[g("div",Cs,Vs,512)],4),g("div",{class:"vuedoc-demo__footer",onClick:a[0]||(a[0]=a=>s.toggleCode(0))},q(s.vdpv_0Height>0?"hidden":"show"),1)])]),Hs,xs,Ds,g("div",Is,[g("div",Rs,[g("div",As,[i(c)]),g("div",{style:f({height:s.vdpv_1Height+"px"}),class:"vuedoc-demo__source"},[g("div",Us,Os,512)],4),g("div",{class:"vuedoc-demo__footer",onClick:a[1]||(a[1]=a=>s.toggleCode(1))},q(s.vdpv_1Height>0?"hidden":"show"),1)])]),Ps,Ss,zs,g("div",Ms,[g("div",Ts,[g("div",$s,[i(o)]),g("div",{style:f({height:s.vdpv_2Height+"px"}),class:"vuedoc-demo__source"},[g("div",Bs,Es,512)],4),g("div",{class:"vuedoc-demo__footer",onClick:a[2]||(a[2]=a=>s.toggleCode(2))},q(s.vdpv_2Height>0?"hidden":"show"),1)])]),Fs,g("div",Ns,[g("div",Gs,[g("div",Js,[i(j)]),g("div",{style:f({height:s.vdpv_3Height+"px"}),class:"vuedoc-demo__source"},[g("div",Ks,Ls,512)],4),g("div",{class:"vuedoc-demo__footer",onClick:a[3]||(a[3]=a=>s.toggleCode(3))},q(s.vdpv_3Height>0?"hidden":"show"),1)])]),Qs,Ws,Xs,g("div",Ys,[g("div",Zs,[g("div",sa,[i(u)]),g("div",{style:f({height:s.vdpv_4Height+"px"}),class:"vuedoc-demo__source"},[g("div",aa,la,512)],4),g("div",{class:"vuedoc-demo__footer",onClick:a[4]||(a[4]=a=>s.toggleCode(4))},q(s.vdpv_4Height>0?"hidden":"show"),1)])]),na,ta,g("div",pa,[g("div",ea,[g("div",ca,[i(v)]),g("div",{style:f({height:s.vdpv_5Height+"px"}),class:"vuedoc-demo__source"},[g("div",oa,da,512)],4),g("div",{class:"vuedoc-demo__footer",onClick:a[5]||(a[5]=a=>s.toggleCode(5))},q(s.vdpv_5Height>0?"hidden":"show"),1)])]),ha,ra,g("div",ga,[g("div",ia,[g("div",ja,[i(m)]),g("div",{style:f({height:s.vdpv_6Height+"px"}),class:"vuedoc-demo__source"},[g("div",ua,va,512)],4),g("div",{class:"vuedoc-demo__footer",onClick:a[6]||(a[6]=a=>s.toggleCode(6))},q(s.vdpv_6Height>0?"hidden":"show"),1)])]),ma,_a,fa,g("div",qa,[g("div",ka,[g("div",ba,[i(_)]),g("div",{style:f({height:s.vdpv_7Height+"px"}),class:"vuedoc-demo__source"},[g("div",ya,wa,512)],4),g("div",{class:"vuedoc-demo__footer",onClick:a[7]||(a[7]=a=>s.toggleCode(7))},q(s.vdpv_7Height>0?"hidden":"show"),1)])]),Ca])};export{fs as default};
