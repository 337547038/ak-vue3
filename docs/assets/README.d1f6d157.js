var a=Object.defineProperty,s=Object.defineProperties,e=Object.getOwnPropertyDescriptors,t=Object.getOwnPropertySymbols,r=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable,n=(s,e,t)=>e in s?a(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;import{d as l,r as c,a as d,o as p,h,w as i,g as v,t as u,l as g,C as m,c as j,b as k,f,B as b,S as _}from"./vendor.393926ba.js";var y=l({setup(a){const s=c("#479ba6");return(a,e)=>{const t=d("ak-color-picker");return p(),h(t,{modelValue:s.value,"onUpdate:modelValue":e[0]||(e[0]=a=>s.value=a)},{default:i((()=>[v("选择颜色"+u(s.value),1)])),_:1},8,["modelValue"])}}});const w=l({components:{vdpv_0:y},setup(a){const l=c(),d=[l],p=g({vdpv_0Height:0});return h=((a,s)=>{for(var e in s||(s={}))r.call(s,e)&&n(a,e,s[e]);if(t)for(var e of t(s))o.call(s,e)&&n(a,e,s[e]);return a})({toggleCode:a=>{const s="vdpv_"+a;0===p[s+"Height"]?p[s+"Height"]=(d[a].value?d[a].value.offsetHeight:0)||0:p[s+"Height"]=0}},m(p)),s(h,e({vdpv_0Ref:l}));var h}});w.$vd={matter:{},toc:[{content:"ColorPicker 颜色选择器",anchor:"colorpicker-颜色选择器",level:1},{content:"基础用法",anchor:"基础用法",level:3},{content:"API",anchor:"api",level:2},{content:"ColorPicker",anchor:"colorpicker",level:3},{content:"ColorPicker Event",anchor:"colorpicker-event",level:3}]};const P=w,C={class:"vuedoc  "},O=_('<h1 id="colorpicker-颜色选择器" data-source-line="3"><a class="markdownIt-Anchor" href="#colorpicker-颜色选择器">#</a> ColorPicker 颜色选择器</h1><h3 id="基础用法" data-source-line="5"><a class="markdownIt-Anchor" href="#基础用法">#</a> 基础用法</h3><pre style="display:none;"></pre>',3),I={class:"vuedoc-demo "},A={class:"vuedoc-demo__inner"},H={class:"vuedoc-demo__preview"},x={ref:"vdpv_0Ref",class:"vuedoc-demo__sourceref"},S=[_('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">ak-color-picker</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;color&quot;</span>&gt;</span>选择颜色{{ color }}<span class="hljs-tag">&lt;/<span class="hljs-name">ak-color-picker</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;ts&quot;</span> <span class="hljs-attr">setup</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n  <span class="hljs-keyword">const</span> color = ref(<span class="hljs-string">&#39;#479ba6&#39;</span>)\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n</span></code></pre></div>',1)],q=_('<h2 id="api" data-source-line="18"><a class="markdownIt-Anchor" href="#api">#</a> API</h2><h3 id="colorpicker" data-source-line="20"><a class="markdownIt-Anchor" href="#colorpicker">#</a> ColorPicker</h3><table data-source-line="22"><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>v-model</td><td>String</td><td>选择的颜色</td></tr><tr><td>format</td><td>String/hex</td><td>格式化类型，hex和rgb两种</td></tr><tr><td>change</td><td>Function</td><td>确认点击事件</td></tr><tr><td>text</td><td>String</td><td>确认文本</td></tr></tbody></table><h3 id="colorpicker-event" data-source-line="29"><a class="markdownIt-Anchor" href="#colorpicker-event">#</a> ColorPicker Event</h3><table data-source-line="31"><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>change</td><td>确认点击事件</td></tr></tbody></table>',5);P.render=function(a,s,e,t,r,o){const n=d("vdpv_0");return p(),j("div",C,[O,k("div",I,[k("div",A,[k("div",H,[f(n)]),k("div",{style:b({height:a.vdpv_0Height+"px"}),class:"vuedoc-demo__source"},[k("div",x,S,512)],4),k("div",{class:"vuedoc-demo__footer",onClick:s[0]||(s[0]=s=>a.toggleCode(0))},u(a.vdpv_0Height>0?"hidden":"show"),1)])]),q])};export{P as default};
