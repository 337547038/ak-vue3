import{_ as r,o as p,c as l,d,h as i,i as h,j as u}from"./index-6c3c2d70.js";const n=d({components:{},setup(t){const o=[],e=i({});return{toggleCode:s=>{const a="vdpv_"+s;e[a+"Height"]===0?e[a+"Height"]=(o[s].value?o[s].value.offsetHeight:0)||0:e[a+"Height"]=0},...h(e)}}});n.$vd={matter:{},toc:[{content:"AK UI",anchor:"ak-ui",level:1},{content:"全局引入（推荐）",anchor:"全局引入推荐",level:2},{content:"按需引用",anchor:"按需引用",level:2},{content:"可打包",anchor:"可打包",level:2}]};const m=n,_={class:"vuedoc"},f=u(`<h1 id="ak-ui" data-source-line="2"><a class="markdownIt-Anchor" href="#ak-ui">#</a> AK UI</h1><p data-source-line="4">AK UI是一个vue3的组件库，基于 Vue3 + Typescript + Vite + pnpm。</p><p data-source-line="6">常用基础组件，代码简洁，满足常见项目，组件类名可自定义，全程无红线语法报错，便于二次开发，无缝衔接项目</p><p data-source-line="8">主题可调，只需10分钟即可定义一套全新的组件样式</p><p data-source-line="10">用于学习研究，欢迎交流，QQ/微信:337547038</p><h2 id="全局引入推荐" data-source-line="12"><a class="markdownIt-Anchor" href="#全局引入推荐">#</a> 全局引入（推荐）</h2><p data-source-line="14">将资源包复制到项目，如 src 目录下，然后在入口页面 main.ts 中如下配置：</p><pre style="display:none;"></pre><pre class="hljs vuedoc__hljs language-javascript hljs--one-dark"><code><span class="hljs-keyword">import</span> Component <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../packages/index&quot;</span>;
<span class="hljs-comment">// 全局注册基础组件</span>
Vue.use(Component);
</code></pre><h2 id="按需引用" data-source-line="22"><a class="markdownIt-Anchor" href="#按需引用">#</a> 按需引用</h2><p data-source-line="24">在当前页面 import 所需组件</p><pre style="display:none;"></pre><pre class="hljs vuedoc__hljs language-javascript hljs--one-dark"><code><span class="hljs-keyword">import</span> Button <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../packages/button.vue&quot;</span>;
</code></pre><h2 id="可打包" data-source-line="30"><a class="markdownIt-Anchor" href="#可打包">#</a> 可打包</h2><p data-source-line="32">可使用命令<code>npm run build:lib</code>将组件资源打包成一个js文件</p>`,15),v=[f];function j(t,o,e,c,s,a){return p(),l("div",_,v)}const g=r(m,[["render",j]]);export{g as default};
