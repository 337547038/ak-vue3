var s=Object.defineProperty,a=Object.defineProperties,n=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,t=Object.prototype.hasOwnProperty,e=Object.prototype.propertyIsEnumerable,p=(a,n,l)=>n in a?s(a,n,{enumerable:!0,configurable:!0,writable:!0,value:l}):a[n]=l;import{d as c,r as o,a as d,o as r,c as h,b as i,f as u,F as v,h as j,w as g,g as m,l as _,C as f,B as q,t as k,S as y}from"./vendor.393926ba.js";var w=c({setup(s){const a=o("初始默认值");return(s,n)=>{const l=d("ak-input");return r(),h(v,null,[i("p",null,[u(l)]),i("p",null,[u(l,{placeholder:"请输入内容"})]),i("p",null,[u(l,{placeholder:"请输入内容",modelValue:a.value,"onUpdate:modelValue":n[0]||(n[0]=s=>a.value=s)},null,8,["modelValue"])]),i("p",null,[u(l,{placeholder:"禁用状态",disabled:!0})])],64)}}});const x={setup(s){const a=o("");return(s,n)=>{const l=d("ak-input");return r(),j(l,{placeholder:"试着输入些什么看看",modelValue:a.value,"onUpdate:modelValue":n[0]||(n[0]=s=>a.value=s),clear:!0},null,8,["modelValue"])}}};var b=c({setup(s){const a=o("");return(s,n)=>{const l=d("ak-input");return r(),j(l,{placeholder:"请输入内容",modelValue:a.value,"onUpdate:modelValue":n[0]||(n[0]=s=>a.value=s),showEye:!0,type:"password"},null,8,["modelValue"])}}});const I={};I.render=function(s,a){const n=d("ak-input");return r(),h(v,null,[i("p",null,[u(n,{placeholder:"请输入内容","prefix-icon":"icon-user"})]),i("p",null,[u(n,{placeholder:"请输入内容","suffix-icon":"icon-search"})])],64)};const H={},C=m("CM"),A=m("http://");H.render=function(s,a){const n=d("ak-input");return r(),h(v,null,[i("p",null,[u(n,{placeholder:"请输入内容"},{append:g((()=>[C])),_:1})]),i("p",null,[u(n,{placeholder:"请输入内容"},{prepend:g((()=>[A])),_:1})])],64)};const R={};R.render=function(s,a){const n=d("ak-input");return r(),h(v,null,[i("p",null,[u(n,{placeholder:"默认尺寸",size:"large"})]),i("p",null,[u(n,{placeholder:"默认尺寸"})]),i("p",null,[u(n,{placeholder:"sixe=small",size:"small"})]),i("p",null,[u(n,{placeholder:"sixe=mini",size:"mini"})])],64)};const V=c({components:{vdpv_0:w,vdpv_1:x,vdpv_2:b,vdpv_3:I,vdpv_4:H,vdpv_5:R},setup(s){const c=o(),d=o(),r=o(),h=o(),i=o(),u=o(),v=[c,d,r,h,i,u],j=_({vdpv_0Height:0,vdpv_1Height:0,vdpv_2Height:0,vdpv_3Height:0,vdpv_4Height:0,vdpv_5Height:0});return g=((s,a)=>{for(var n in a||(a={}))t.call(a,n)&&p(s,n,a[n]);if(l)for(var n of l(a))e.call(a,n)&&p(s,n,a[n]);return s})({toggleCode:s=>{const a="vdpv_"+s;0===j[a+"Height"]?j[a+"Height"]=(v[s].value?v[s].value.offsetHeight:0)||0:j[a+"Height"]=0}},f(j)),a(g,n({vdpv_0Ref:c,vdpv_1Ref:d,vdpv_2Ref:r,vdpv_3Ref:h,vdpv_4Ref:i,vdpv_5Ref:u}));var g}});V.$vd={matter:{},toc:[{content:"Input 输入框",anchor:"input-输入框",level:1},{content:"基本使用",anchor:"基本使用",level:3},{content:"显示清空按钮",anchor:"显示清空按钮",level:3},{content:"可显示密码明文",anchor:"可显示密码明文",level:3},{content:"添加前后缀Icon",anchor:"添加前后缀icon",level:3},{content:"复合型输入框",anchor:"复合型输入框",level:3},{content:"设置大小",anchor:"设置大小",level:3},{content:"API",anchor:"api",level:2},{content:"Input Props",anchor:"input-props",level:3},{content:"Input Slots",anchor:"input-slots",level:3}]};const O=V,P={class:"vuedoc  "},z=y('<h1 id="input-输入框" data-source-line="1"><a class="markdownIt-Anchor" href="#input-输入框">#</a> Input 输入框</h1><h3 id="基本使用" data-source-line="3"><a class="markdownIt-Anchor" href="#基本使用">#</a> 基本使用</h3><pre style="display:none;"></pre>',3),E={class:"vuedoc-demo "},S={class:"vuedoc-demo__inner"},U={class:"vuedoc-demo__preview"},M={ref:"vdpv_0Ref",class:"vuedoc-demo__sourceref"},B=[y('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">ak-input</span> /&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">ak-input</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入内容&quot;</span> /&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">ak-input</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入内容&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;defaultValue&quot;</span> /&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">ak-input</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;禁用状态&quot;</span> <span class="hljs-attr">:disabled</span>=<span class="hljs-string">&quot;true&quot;</span> /&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;ts&quot;</span> <span class="hljs-attr">setup</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n  <span class="hljs-keyword">const</span> defaultValue = ref(<span class="hljs-string">&#39;初始默认值&#39;</span>)\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n</span></code></pre></div>',1)],D=i("h3",{id:"显示清空按钮","data-source-line":"19"},[i("a",{class:"markdownIt-Anchor",href:"#显示清空按钮"},"#"),m(" 显示清空按钮")],-1),F=i("p",{"data-source-line":"21"},[m("设置"),i("code",null,'clear="true"'),m("，在输入框不为空时显示清空按钮")],-1),$=i("pre",{style:{display:"none"}},null,-1),G={class:"vuedoc-demo "},J={class:"vuedoc-demo__inner"},K={class:"vuedoc-demo__preview"},L={ref:"vdpv_1Ref",class:"vuedoc-demo__sourceref"},N=[y('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">ak-input</span>\n    <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;试着输入些什么看看&quot;</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;valueClear&quot;</span>\n    <span class="hljs-attr">:clear</span>=<span class="hljs-string">&quot;true&quot;</span>\n  /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">setup</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n  <span class="hljs-keyword">const</span> valueClear = ref(<span class="hljs-string">&#39;&#39;</span>)\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n</span></code></pre></div>',1)],Q=i("h3",{id:"可显示密码明文","data-source-line":"38"},[i("a",{class:"markdownIt-Anchor",href:"#可显示密码明文"},"#"),m(" 可显示密码明文")],-1),T=i("p",{"data-source-line":"40"},[i("code",null,'type="password'),m("时设置"),i("code",null,'showEye="true"'),m("可显示密码明文")],-1),W=i("pre",{style:{display:"none"}},null,-1),X={class:"vuedoc-demo "},Y={class:"vuedoc-demo__inner"},Z={class:"vuedoc-demo__preview"},ss={ref:"vdpv_2Ref",class:"vuedoc-demo__sourceref"},as=[y('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">ak-input</span>\n    <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入内容&quot;</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span>\n    <span class="hljs-attr">:showEye</span>=<span class="hljs-string">&quot;true&quot;</span>\n    <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span>\n  /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;ts&quot;</span> <span class="hljs-attr">setup</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n  <span class="hljs-keyword">const</span> value = ref(<span class="hljs-string">&#39;&#39;</span>)\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n</span></code></pre></div>',1)],ns=i("h3",{id:"添加前后缀icon","data-source-line":"58"},[i("a",{class:"markdownIt-Anchor",href:"#添加前后缀icon"},"#"),m(" 添加前后缀Icon")],-1),ls=i("p",{"data-source-line":"60"},[m("可以通过 "),i("code",null,"prefix-icon"),m(" 和 "),i("code",null,"suffix-icon"),m(" 属性在 input 组件首部和尾部增加显示图标，也可以通过 slot "),i("code",null,"prefix"),m(" 和 "),i("code",null,"suffix"),m(" 来放置图标。")],-1),ts=i("pre",{style:{display:"none"}},null,-1),es={class:"vuedoc-demo "},ps={class:"vuedoc-demo__inner"},cs={class:"vuedoc-demo__preview"},os={ref:"vdpv_3Ref",class:"vuedoc-demo__sourceref"},ds=[y('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-input</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入内容&quot;</span> <span class="hljs-attr">prefix-icon</span>=<span class="hljs-string">&quot;icon-user&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-input</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入内容&quot;</span> <span class="hljs-attr">suffix-icon</span>=<span class="hljs-string">&quot;icon-search&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n</span></code></pre></div>',1)],rs=i("h3",{id:"复合型输入框","data-source-line":"74"},[i("a",{class:"markdownIt-Anchor",href:"#复合型输入框"},"#"),m(" 复合型输入框")],-1),hs=i("p",{"data-source-line":"76"},"可前置或后置元素，一般为标签或按钮",-1),is=i("pre",{style:{display:"none"}},null,-1),us={class:"vuedoc-demo "},vs={class:"vuedoc-demo__inner"},js={class:"vuedoc-demo__preview"},gs={ref:"vdpv_4Ref",class:"vuedoc-demo__sourceref"},ms=[y('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-input</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入内容&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">append</span>&gt;</span>CM<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">ak-input</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ak-input</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入内容&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">prepend</span>&gt;</span>http://<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">ak-input</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n</span></code></pre></div>',1)],_s=i("h3",{id:"设置大小","data-source-line":"94"},[i("a",{class:"markdownIt-Anchor",href:"#设置大小"},"#"),m(" 设置大小")],-1),fs=i("p",{"data-source-line":"96"},[m("支持 "),i("code",null,"large"),m("、"),i("code",null,"normal"),m("、"),i("code",null,"small"),m("、"),i("code",null,"mini"),m(" 四种尺寸，默认为 normal")],-1),qs=i("pre",{style:{display:"none"}},null,-1),ks={class:"vuedoc-demo "},ys={class:"vuedoc-demo__inner"},ws={class:"vuedoc-demo__preview"},xs={ref:"vdpv_5Ref",class:"vuedoc-demo__sourceref"},bs=[y('<div class="vuedoc__code "><pre class="hljs vuedoc__hljs language-vue hljs--one-dark"><code><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">ak-input</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;默认尺寸&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;large&quot;</span> /&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">ak-input</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;默认尺寸&quot;</span> /&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">ak-input</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;sixe=small&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;small&quot;</span> /&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">ak-input</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;sixe=mini&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;mini&quot;</span> /&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n</span></code></pre></div>',1)],Is=y('<h2 id="api" data-source-line="108"><a class="markdownIt-Anchor" href="#api">#</a> API</h2><h3 id="input-props" data-source-line="110"><a class="markdownIt-Anchor" href="#input-props">#</a> Input Props</h3><table data-source-line="112"><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>v-model</td><td>any</td><td>输入框的值</td></tr><tr><td>clear</td><td>boolean/false</td><td>显示清空按钮</td></tr><tr><td>showEye</td><td>boolean/false</td><td>密码框显示明文切换</td></tr><tr><td>width</td><td>string</td><td>设置宽度属性</td></tr><tr><td>size</td><td>string</td><td>支持 <code>large</code>、<code>normal</code>、<code>small</code>、<code>mini</code> 四种尺寸，默认为 <code>normal</code></td></tr><tr><td>prefixIcon</td><td>string</td><td>前缀icon图标</td></tr><tr><td>suffixIcon</td><td>string</td><td>后缀icon图标</td></tr><tr><td>-</td><td></td><td>其它原生所有属性</td></tr></tbody></table><h3 id="input-slots" data-source-line="123"><a class="markdownIt-Anchor" href="#input-slots">#</a> Input Slots</h3><table data-source-line="125"><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>prepend</td><td>输入框前置内容</td></tr><tr><td>append</td><td>输入框后置内容</td></tr><tr><td>prefix</td><td>前缀icon图标</td></tr><tr><td>suffix</td><td>后缀icon图标</td></tr></tbody></table>',5);O.render=function(s,a,n,l,t,e){const p=d("vdpv_0"),c=d("vdpv_1"),o=d("vdpv_2"),v=d("vdpv_3"),j=d("vdpv_4"),g=d("vdpv_5");return r(),h("div",P,[z,i("div",E,[i("div",S,[i("div",U,[u(p)]),i("div",{style:q({height:s.vdpv_0Height+"px"}),class:"vuedoc-demo__source"},[i("div",M,B,512)],4),i("div",{class:"vuedoc-demo__footer",onClick:a[0]||(a[0]=a=>s.toggleCode(0))},k(s.vdpv_0Height>0?"hidden":"show"),1)])]),D,F,$,i("div",G,[i("div",J,[i("div",K,[u(c)]),i("div",{style:q({height:s.vdpv_1Height+"px"}),class:"vuedoc-demo__source"},[i("div",L,N,512)],4),i("div",{class:"vuedoc-demo__footer",onClick:a[1]||(a[1]=a=>s.toggleCode(1))},k(s.vdpv_1Height>0?"hidden":"show"),1)])]),Q,T,W,i("div",X,[i("div",Y,[i("div",Z,[u(o)]),i("div",{style:q({height:s.vdpv_2Height+"px"}),class:"vuedoc-demo__source"},[i("div",ss,as,512)],4),i("div",{class:"vuedoc-demo__footer",onClick:a[2]||(a[2]=a=>s.toggleCode(2))},k(s.vdpv_2Height>0?"hidden":"show"),1)])]),ns,ls,ts,i("div",es,[i("div",ps,[i("div",cs,[u(v)]),i("div",{style:q({height:s.vdpv_3Height+"px"}),class:"vuedoc-demo__source"},[i("div",os,ds,512)],4),i("div",{class:"vuedoc-demo__footer",onClick:a[3]||(a[3]=a=>s.toggleCode(3))},k(s.vdpv_3Height>0?"hidden":"show"),1)])]),rs,hs,is,i("div",us,[i("div",vs,[i("div",js,[u(j)]),i("div",{style:q({height:s.vdpv_4Height+"px"}),class:"vuedoc-demo__source"},[i("div",gs,ms,512)],4),i("div",{class:"vuedoc-demo__footer",onClick:a[4]||(a[4]=a=>s.toggleCode(4))},k(s.vdpv_4Height>0?"hidden":"show"),1)])]),_s,fs,qs,i("div",ks,[i("div",ys,[i("div",ws,[u(g)]),i("div",{style:q({height:s.vdpv_5Height+"px"}),class:"vuedoc-demo__source"},[i("div",xs,bs,512)],4),i("div",{class:"vuedoc-demo__footer",onClick:a[5]||(a[5]=a=>s.toggleCode(5))},k(s.vdpv_5Height>0?"hidden":"show"),1)])]),Is])};export{O as default};
